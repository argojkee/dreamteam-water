{"version":3,"file":"static/js/485.c6129d85.chunk.js","mappings":"0RAGaA,EAAgBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,umFACjB,SAAAC,GAAK,OACvBA,EAAMC,QAAU,uBAAyB,aAAa,IA2B7C,SAAAD,GAAK,OAAKA,EAAMC,QAAU,SAAW,sBAAsB,IAkDhD,SAAAD,GAAK,OACvBA,EAAMC,QAAU,UAAY,sBAAsB,IAI9B,SAAAD,GAAK,OAAKA,EAAMC,QAAU,UAAY,SAAS,IA0D5DC,EAAmBL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oKAGhBK,G,GAMGP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6S,0DC3IjCO,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,MAAM,iDAC1BC,YAAaH,EAAAA,KAEVI,IAAI,EAAG,2CACPC,MAAM,CAACL,EAAAA,GAAQ,sBAAuB,0BACzCM,kBAAmBN,EAAAA,KAEhBI,IAAI,EAAG,2CACPC,MAAM,CAACL,EAAAA,GAAQ,gBAAiB,4BAiBrCO,aAbA,WACE,IAAMC,EAAUC,SAASC,cAAc,eACjCC,EAAWF,SAASG,cAAc,QACpCC,EAAuB,GAAhBC,KAAKC,SAChBJ,EAASK,MAAMC,MAAQ,GAAKJ,EAAO,KACnCF,EAASK,MAAME,OAAS,GAAKL,EAAO,KACpCF,EAASK,MAAMG,KAAOL,KAAKC,SAAWK,OAAOC,WAAa,KAC1Db,EAAQc,YAAYX,GAEpBY,YAAW,WACTZ,EAASa,QACX,GAAmB,IAAhBV,KAAKC,SACV,GAC0B,KAG1B,IAgIA,EAhIoB,WAClB,IAAMU,GAAMC,EAAAA,EAAAA,MACNC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,GAC3BC,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAEtBI,GAAiBC,EAAAA,EAAAA,MAAjBD,aACFE,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAAC,EAAAC,GAAA,IAAA1C,EAAAC,EAAA0C,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAA0C,GAAjC9C,EAAKyC,EAALzC,MAAOC,EAAWwC,EAAXxC,YAAiB0C,EAASD,EAATC,UAC/CT,EAAa,CAADU,EAAAE,KAAA,SAEM,OAFNF,EAAAC,KAAA,EAEbZ,GAAa,GAAMW,EAAAE,KAAA,EACbC,EAAAA,EAAAA,KAAW,gEAEf,CAAE/C,MAAAA,IACF,KAAD,GAEDgD,EAAAA,EAAAA,GAAa,uDAAuDJ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,UAEpEM,EAAAA,EAAAA,GAAW,iDAAiD,QAExC,OAFwCN,EAAAC,KAAA,GAE5DZ,GAAa,GAAOW,EAAAO,OAAA,YAAAP,EAAAE,KAAA,iBAID,OAJCF,EAAAC,KAAA,GAIpBZ,GAAa,GAAMW,EAAAE,KAAA,GACbC,EAAAA,EAAAA,MAAY,iEAADK,OACkDlB,GACjE,CAAEmB,SAAUpD,IACZ,KAAD,IACD+C,EAAAA,EAAAA,GAAa,6CAA6CJ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,WAE1DM,EAAAA,EAAAA,GAAW,kDAAkD,QAEzC,OAFyCN,EAAAC,KAAA,GAE7DZ,GAAa,GAAOW,EAAAO,OAAA,YAIxBR,IACApB,EAAI,KAAK,yBAAAqB,EAAAW,OAAA,GAAAf,EAAA,uCACV,gBAhCiBgB,EAAAC,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,KAkCZC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACb9D,MAAO,GACPC,YAAa,GACbG,kBAAmB,IAErB2D,iBAAkBlE,EAClBmE,SAAU5B,IAGN6B,EAAY/B,EAAe,kBAAoB,aACrD,OACEgC,EAAAA,EAAAA,KAAC/E,EAAa,CAACK,QAASiC,EAAO0C,UAC7BD,EAAAA,EAAAA,KAACzE,EAAgB,CAAA0E,UACfC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBD,EAAAA,EAAAA,KAAA,WACAE,EAAAA,EAAAA,MAAA,QAAMJ,SAAUJ,EAAOxB,aAAciC,UAAU,oBAAmBF,SAAA,EAChEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcF,SAAA,CAAC,aACjB,IACVjC,EACG,4BACA,8BAELA,IACCkC,EAAAA,EAAAA,MAAAE,EAAAA,SAAA,CAAAH,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAOG,UAAU,0BAAyBF,UACxCD,EAAAA,EAAAA,KAAA,SACEpD,MACE8C,EAAOW,QAAQtE,aACf2D,EAAOY,OAAOvE,aAAe,CAC3BwE,YAAa,WAGjBJ,UAAU,qBACVK,KAAK,OACLC,SAAUf,EAAOgB,aACjBC,OAAQjB,EAAOkB,WACfC,KAAK,cACLC,YAAY,gBAIhBd,EAAAA,EAAAA,KAAA,SAAOG,UAAU,0BAAyBF,UACxCD,EAAAA,EAAAA,KAAA,SACEpD,MACE8C,EAAOW,QAAQnE,mBACfwD,EAAOY,OAAOpE,mBAAqB,CACjCqE,YAAa,WAGjBJ,UAAU,qBACVK,KAAK,WACLC,SAAUf,EAAOgB,aACjBC,OAAQjB,EAAOkB,WACfC,KAAK,cACLC,YAAY,mBAKlB9C,IACAgC,EAAAA,EAAAA,KAAA,SAAOG,UAAU,0BAAyBF,UACxCD,EAAAA,EAAAA,KAAA,SACEG,UAAU,qBACVK,KAAK,QACLK,KAAK,QACLJ,SAAUf,EAAOgB,aACjBC,OAAQjB,EAAOkB,WACfE,YAAY,aAKlBd,EAAAA,EAAAA,KAAA,UAAQQ,KAAK,SAASL,UAAU,sBAAqBF,SAClDnC,GACCkC,EAAAA,EAAAA,KAACe,EAAAA,IAAY,CAACZ,UAAU,UAAU1D,KAAM,KAExCsD,QAINC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,qBAKzB,C","sources":["pages/pageStyles/RestoreStyled/RestoreStyle.js","pages/RestorePage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport background from '../../../images/verify/BackgroundMainPage.png';\n\nexport const RestoreStyled = styled.div`\n  background-color: ${props =>\n    props.$isDark ? 'var(--dark-bg-color)' : 'transparent'};\n  height: 100%;\n  width: 100%;\n\n  .box {\n    overflow: hidden;\n    display: flex;\n    justify-content: space-between;\n    flex-direction: column;\n    gap: 20px;\n    width: 100%;\n    height: calc(100% - 60px);\n    position: relative;\n    top: 60px;\n    text-align: center;\n  }\n\n  .setting-text {\n    display: block;\n    padding-bottom: 16px;\n    overflow: hidden;\n    font-style: Roboto;\n    font-weight: 400;\n    font-size: 20px;\n    color: white;\n    line-height: 1.23;\n    text-align: center;\n    color: ${props => (props.$isDark ? 'orange' : 'var(--primary-color)')};\n  }\n\n  .setting-form-form {\n    display: block;\n    width: 384px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  @media screen and (max-width: 390px) {\n    .setting-form-form {\n      width: 100%;\n    }\n  }\n\n  .setting-form-input {\n    display: block;\n    width: 100%;\n    height: 44px;\n    font-family: roboto;\n    font-size: 16px;\n    color: var(--primary-color);\n    padding: 12px 10px;\n    border-radius: 6px;\n    background-color: white;\n    border: 1px solid;\n    border-color: #d7e3ff;\n    outline: 'none';\n    margin-bottom: 16px;\n  }\n\n  @media screen and(max-width: 767px) {\n    .setting-form-input {\n      width: 100%;\n    }\n  }\n\n  .setting-form-submit {\n    display: block;\n    border: 1px solid;\n    border-radius: 6px;\n    height: 44px;\n    padding: 10px 30px;\n    cursor: pointer;\n    width: 100%;\n    margin: 0 8px 8px auto;\n    color: var(--white-color);\n    font-size: 20px;\n\n    background-color: ${props =>\n      props.$isDark ? '#ff9d43' : 'var(--primary-color)'};\n    box-shadow: 0px 5px 8px rgba(64, 123, 255, 0.34);\n\n    &:hover {\n      background-color: ${props => (props.$isDark ? '#FB8925' : '#3371f8')};\n      box-shadow: 0px 5px 14px rgba(64, 123, 255, 0.54);\n    }\n\n    &:active {\n      box-shadow: none;\n    }\n  }\n\n  @media screen and (max-width: 390px) {\n    .setting-form-submit {\n      width: 100%;\n    }\n  }\n\n  .bubble-gen {\n    width: 100wv;\n    height: 0px;\n    margin: 0;\n    padding: 0;\n    bottom: 1px;\n  }\n\n  span {\n    position: absolute;\n    border-radius: 50%;\n    box-shadow: inset 0 0 10px rgba(255, 255, 255, 0.5);\n    animation: animate 4s linear infinite;\n  }\n  span:before {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    transform: scale(0.25) translate(-70%, -70%);\n    background: radial-gradient(#fff, transparent);\n    border-radius: 50%;\n  }\n  @keyframes animate {\n    0% {\n      transform: translateY(0%);\n      opacity: 1;\n    }\n    60%,\n    99% {\n      opacity: 1;\n    }\n    100% {\n      transform: translateY(-1200%);\n      opacity: 0;\n    }\n  }\n  h2 {\n    color: #333;\n    font-size: 10em;\n  }\n`;\n\nexport const BackgroundStyles = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${background});\n  background-size: 100%;\n  background-position: bottom;\n  background-repeat: no-repeat;\n`;\n\nexport const ContentStyles = styled.div`\n  //стили\n\n  margin-left: auto;\n  margin-right: auto;\n\n  padding-top: 200px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: roboto;\n  color: white;\n  width: 100%;\n  margin-bottom: 8px;\n  background-color: transparent;\n`;\n","import axios from 'axios';\nimport { useFormik } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { useParams } from 'react-router-dom';\nimport {\n  RestoreStyled,\n  BackgroundStyles,\n} from './pageStyles/RestoreStyled/RestoreStyle';\nimport { getIsDarkTheme } from '../redux/theme/themeSelectors';\nimport { useSelector } from 'react-redux';\nimport { toastSuccess, toastError } from 'services/toastNotification';\nimport { PiSpinnerGap } from 'react-icons/pi';\nimport { useState } from 'react';\n\nconst schema = yup.object().shape({\n  email: yup.string().email('Enter valid email. For example user@gmail.com'),\n  newPassword: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters.')\n    .oneOf([yup.ref('repeatNewPassword')], 'Passwords do not match'),\n  repeatNewPassword: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters.')\n    .oneOf([yup.ref('newPassword')], 'Passwords do not match'),\n});\n\n// =================================================================\nfunction createCircle() {\n  const section = document.querySelector('.bubble-gen');\n  const circleEl = document.createElement('span');\n  let size = Math.random() * 50;\n  circleEl.style.width = 20 + size + 'px';\n  circleEl.style.height = 20 + size + 'px';\n  circleEl.style.left = Math.random() * window.innerWidth + 'px';\n  section.appendChild(circleEl);\n\n  setTimeout(() => {\n    circleEl.remove();\n  }, Math.random() * 5000);\n}\nsetInterval(createCircle, 200);\n// =================================================================\n\nconst RestorePage = () => {\n  const nav = useNavigate();\n  const isDark = useSelector(getIsDarkTheme);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { restoreToken } = useParams();\n  const handleSubmit = async ({ email, newPassword }, { resetForm }) => {\n    if (!restoreToken) {\n      try {\n        setIsLoading(true);\n        await axios.post(\n          `https://dreamteam-water-server.onrender.com/api/users/restore`,\n          { email }\n        );\n\n        toastSuccess('We have sent you instruction to reset your password');\n      } catch (error) {\n        toastError('Oops, something went wrong. Please, try again');\n      } finally {\n        setIsLoading(false);\n      }\n    } else {\n      try {\n        setIsLoading(true);\n        await axios.patch(\n          `https://dreamteam-water-server.onrender.com/api/users/restore/${restoreToken}`,\n          { password: newPassword }\n        );\n        toastSuccess('Your password has been changed successful');\n      } catch (error) {\n        toastError('Sorry, something went wrong. Please, try again');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    resetForm();\n    nav('/');\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      newPassword: '',\n      repeatNewPassword: '',\n    },\n    validationSchema: schema,\n    onSubmit: handleSubmit,\n  });\n\n  const buttonTxt = restoreToken ? 'Change password' : 'Send email';\n  return (\n    <RestoreStyled $isDark={isDark}>\n      <BackgroundStyles>\n        <div className=\"box\">\n          <div></div>\n          <form onSubmit={formik.handleSubmit} className=\"setting-form-form\">\n            <div className=\"setting-text\">\n              Enter your{' '}\n              {restoreToken\n                ? 'new password to change it'\n                : 'email to change password'}\n            </div>\n            {restoreToken && (\n              <>\n                <label className=\"setting-form-name-label\">\n                  <input\n                    style={\n                      formik.touched.newPassword &&\n                      formik.errors.newPassword && {\n                        borderColor: '#EF5050',\n                      }\n                    }\n                    className=\"setting-form-input\"\n                    type=\"text\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    name=\"newPassword\"\n                    placeholder=\"Password\"\n                  />\n                </label>\n\n                <label className=\"setting-form-name-label\">\n                  <input\n                    style={\n                      formik.touched.repeatNewPassword &&\n                      formik.errors.repeatNewPassword && {\n                        borderColor: '#EF5050',\n                      }\n                    }\n                    className=\"setting-form-input\"\n                    type=\"password\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    name=\"newPassword\"\n                    placeholder=\"Password\"\n                  />\n                </label>\n              </>\n            )}\n            {!restoreToken && (\n              <label className=\"setting-form-name-label\">\n                <input\n                  className=\"setting-form-input\"\n                  type=\"email\"\n                  name=\"email\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  placeholder=\"Email\"\n                />\n              </label>\n            )}\n\n            <button type=\"submit\" className=\"setting-form-submit\">\n              {isLoading ? (\n                <PiSpinnerGap className=\"spinner\" size={16} />\n              ) : (\n                buttonTxt\n              )}\n            </button>\n          </form>\n          <div className=\"bubble-gen\"></div>\n        </div>\n      </BackgroundStyles>\n    </RestoreStyled>\n  );\n};\n\nexport default RestorePage;\n"],"names":["RestoreStyled","styled","_templateObject","_taggedTemplateLiteral","props","$isDark","BackgroundStyles","_templateObject2","background","_templateObject3","schema","yup","shape","email","newPassword","min","oneOf","repeatNewPassword","setInterval","section","document","querySelector","circleEl","createElement","size","Math","random","style","width","height","left","window","innerWidth","appendChild","setTimeout","remove","nav","useNavigate","isDark","useSelector","getIsDarkTheme","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","restoreToken","useParams","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee","_ref","_ref2","resetForm","_context","prev","next","axios","toastSuccess","t0","toastError","finish","concat","password","t1","stop","_x","_x2","apply","arguments","formik","useFormik","initialValues","validationSchema","onSubmit","buttonTxt","_jsx","children","_jsxs","className","_Fragment","touched","errors","borderColor","type","onChange","handleChange","onBlur","handleBlur","name","placeholder","PiSpinnerGap"],"sourceRoot":""}