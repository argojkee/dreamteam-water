{"version":3,"file":"static/js/515.eaa1330a.chunk.js","mappings":"6LAMA,EAJyB,WACvB,OAAOA,EAAAA,EAAAA,KAAA,OAAAC,SAAK,oBACd,ECEA,EAJ0B,WACxB,OAAOD,EAAAA,EAAAA,KAAA,OAAAC,SAAK,qBACd,E,6BCFaC,E,QAAcC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,w3BCG/BC,EAAYC,SAASC,eAAe,kBAE7BC,EAAQ,SAAHC,GAAsB,IAAhBT,EAAQS,EAART,SACtBU,GAAuCC,EAAAA,EAAAA,KAA/BC,EAAUF,EAAVE,WAAYC,EAAcH,EAAdG,eAEdC,GAAaC,EAAAA,EAAAA,cAAY,WAC7BH,EAAW,MACXC,GAAe,EACjB,GAAG,CAACD,EAAYC,KAEhBG,EAAAA,EAAAA,YAAU,WACR,SAASC,EAAKC,GACC,WADMA,EAAJC,MAKfL,GACF,CACAR,SAASc,KAAKC,MAAMC,SAAW,SAC/B,IAAMC,EAAgBC,OAAOC,WAAanB,SAASc,KAAKM,YAAc,KAKtE,OAHApB,SAASc,KAAKC,MAAMM,aAAeJ,EACnCC,OAAOI,iBAAiB,UAAWX,GAE5B,WACLO,OAAOK,oBAAoB,UAAWZ,GACtCX,SAASc,KAAKC,MAAMC,SAAW,OAC/BhB,SAASc,KAAKC,MAAMM,aAAe,KACrC,CACF,GAAG,CAACb,IASJ,OAAOgB,EAAAA,EAAAA,eACL/B,EAAAA,EAAAA,KAACE,EAAW,CAAC8B,QARI,SAAHC,GAAYA,EAANC,SAAqBD,EAAbE,eAI5BpB,GACF,EAGmCd,UAC/BmC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOpC,SAAA,EACpBD,EAAAA,EAAAA,KAAA,UAAQsC,KAAK,SAASD,UAAU,YAAYL,QAASjB,EAAWd,SAAC,UAGhEA,OAGLK,EAEJ,ECxBA,EAzBiB,WACf,IAAAK,GACEC,EAAAA,EAAAA,KADMC,EAAUF,EAAVE,WAAYC,EAAcH,EAAdG,eAAgByB,EAAW5B,EAAX4B,YAAaC,EAAO7B,EAAP6B,QAajD,OACEJ,EAAAA,EAAAA,MAAAK,EAAAA,SAAA,CAAAxC,SAAA,EACED,EAAAA,EAAAA,KAAA,OAAAC,SAAK,cACLD,EAAAA,EAAAA,KAAA,UAAQgC,QAdS,WACnBlB,GAAe,GACfD,GAAWb,EAAAA,EAAAA,KAAC0C,EAAgB,IAC9B,EAWkCzC,SAAC,8BAC/BD,EAAAA,EAAAA,KAAA,UAAQgC,QAVU,WACpBlB,GAAe,GAEfD,GAAWb,EAAAA,EAAAA,KAAC2C,EAAiB,IAC/B,EAMmC1C,SAAC,8BAE/BsC,IAAevC,EAAAA,EAAAA,KAACS,EAAK,CAACR,SAAUuC,MAGvC,C","sources":["components/Modal/FirstTestContent.jsx","components/Modal/SecondTestContent.jsx","components/Modal/ModalStyles.styled.js","components/Modal/Modal.jsx","pages/MainPage.jsx"],"sourcesContent":["import React from 'react';\n\nconst FirstTestContent = () => {\n  return <div>FirstTestContent</div>;\n};\n\nexport default FirstTestContent;\n","import React from 'react';\n\nconst SecondTestContent = () => {\n  return <div>SecondTestContent</div>;\n};\n\nexport default SecondTestContent;\n","import styled from 'styled-components';\n\nexport const ModalStyles = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n  transition: 250ms linear;\n\n  .modal {\n    position: relative;\n    height: 500px;\n    width: 80%;\n    max-height: 95%;\n    position: absolute;\n    background-color: rgba(255, 248, 220, 1);\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    border-radius: 20px;\n    padding: 50px 20px;\n    text-align: center;\n  }\n\n  @media screen and (min-width: 768px) {\n    .modal {\n      width: 500px;\n    }\n  }\n\n  .close-btn {\n    position: absolute;\n    right: 30px;\n    top: 18px;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background-color: transparent;\n    color: tomato;\n    transition: 250ms linear;\n  }\n\n  .close-btn:hover,\n  .close-btn:focus {\n    color: blue;\n  }\n`;\n","import { createPortal } from 'react-dom';\nimport { useEffect, useCallback } from 'react';\nimport { ModalStyles } from './ModalStyles.styled';\nimport { useCustomContext } from 'context/Context';\n\nconst modalRoot = document.getElementById('modal-backdrop');\n\nexport const Modal = ({ children }) => {\n  const { setContent, setIsShowModal } = useCustomContext();\n\n  const closeModal = useCallback(() => {\n    setContent(null);\n    setIsShowModal(false);\n  }, [setContent, setIsShowModal]);\n\n  useEffect(() => {\n    function onEsc({ code }) {\n      if (code !== 'Escape') {\n        return;\n      }\n\n      closeModal();\n    }\n    document.body.style.overflow = 'hidden';\n    const paddingOffSet = window.innerWidth - document.body.offsetWidth + 'px';\n\n    document.body.style.paddingRight = paddingOffSet;\n    window.addEventListener('keydown', onEsc);\n\n    return () => {\n      window.removeEventListener('keydown', onEsc);\n      document.body.style.overflow = 'auto';\n      document.body.style.paddingRight = '0px';\n    };\n  }, [closeModal]);\n\n  const onBackdrop = ({ target, currentTarget }) => {\n    if (target !== currentTarget) {\n      return;\n    }\n    closeModal();\n  };\n\n  return createPortal(\n    <ModalStyles onClick={onBackdrop}>\n      <div className=\"modal\">\n        <button type=\"button\" className=\"close-btn\" onClick={closeModal}>\n          Close\n        </button>\n        {children}\n      </div>\n    </ModalStyles>,\n    modalRoot\n  );\n};\n","import FirstTestContent from 'components/Modal/FirstTestContent';\nimport SecondTestContent from 'components/Modal/SecondTestContent';\nimport { useCustomContext } from 'context/Context';\nimport { Modal } from 'components/Modal/Modal';\n\nconst MainPage = () => {\n  const { setContent, setIsShowModal, isShowModal, content } =\n    useCustomContext();\n  const onFirstClick = () => {\n    setIsShowModal(true);\n    setContent(<FirstTestContent />);\n  };\n\n  const onSecondClick = () => {\n    setIsShowModal(true);\n\n    setContent(<SecondTestContent />);\n  };\n\n  return (\n    <>\n      <div>MainPage</div>\n      <button onClick={onFirstClick}>Open first modal content</button>\n      <button onClick={onSecondClick}>Open second modal content</button>\n\n      {isShowModal && <Modal children={content} />}\n    </>\n  );\n};\n\nexport default MainPage;\n"],"names":["_jsx","children","ModalStyles","styled","_templateObject","_taggedTemplateLiteral","modalRoot","document","getElementById","Modal","_ref","_useCustomContext","useCustomContext","setContent","setIsShowModal","closeModal","useCallback","useEffect","onEsc","_ref2","code","body","style","overflow","paddingOffSet","window","innerWidth","offsetWidth","paddingRight","addEventListener","removeEventListener","createPortal","onClick","_ref3","target","currentTarget","_jsxs","className","type","isShowModal","content","_Fragment","FirstTestContent","SecondTestContent"],"sourceRoot":""}