{"version":3,"file":"static/js/485.3141ab46.chunk.js","mappings":"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","sources":["pages/pageStyles/RestoreStyled/RestoreStyle.js","pages/RestorePage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport background from '../../../images/verify/BackgroundMainPage.png';\n\nexport const RestoreStyled = styled.div`\n  background-color: ${props =>\n    props.$isDark ? 'var(--dark-bg-color)' : 'transparent'};\n  height: 100%;\n  width: 100%;\n\n  .box {\n    display: flex;\n    justify-content: center;\n    width: 100%;\n  }\n\n  .setting-form-form {\n    width: 384px;\n  }\n\n  .setting-form-input {\n    display: block;\n    width: 100%;\n    height: 44px;\n    font-family: roboto;\n    font-size: 16px;\n    color: var(--primary-color);\n    padding: 12px 10px;\n    border-radius: 6px;\n    background-color: white;\n    border: 1px solid;\n    border-color: #d7e3ff;\n    outline: 'none';\n    margin-bottom: 16px;\n  }\n\n  @media screen and(max-width: 767px) {\n    .setting-form-input {\n      width: 100%;\n    }\n  }\n\n  .setting-form-submit {\n    display: block;\n    border: 1px solid;\n    border-radius: 6px;\n    height: 44px;\n    padding: 10px 30px;\n    cursor: pointer;\n    width: 100%;\n    margin: 0 8px 8px auto;\n    color: var(--white-color);\n\n    background-color: ${props =>\n      props.$isDark ? '#ff9d43' : 'var(--primary-color)'};\n    box-shadow: 0px 5px 8px rgba(64, 123, 255, 0.34);\n\n    &:hover {\n      background-color: ${props => (props.$isDark ? '#FB8925' : '#3371f8')};\n      box-shadow: 0px 5px 14px rgba(64, 123, 255, 0.54);\n    }\n\n    &:active {\n      box-shadow: none;\n    }\n  }\n\n  @media screen and (max-width: 767px) {\n    .setting-form-submit {\n      width: 100%;\n    }\n  }\n`;\n\nexport const BackgroundStyles = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${background});\n  background-size: 100%;\n  background-position: bottom;\n  background-repeat: no-repeat;\n`;\n\nexport const ContentStyles = styled.div`\n  //стили\n\n  margin-left: auto;\n  margin-right: auto;\n\n  padding-top: 200px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: roboto;\n  color: white;\n  width: 100%;\n  margin-bottom: 8px;\n  background-color: transparent;\n`;\n","import axios from 'axios';\nimport { useFormik } from 'formik';\n// import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { useParams } from 'react-router-dom';\nimport {\n  RestoreStyled,\n  ContentStyles,\n  BackgroundStyles,\n} from './pageStyles/RestoreStyled/RestoreStyle';\nimport { getIsDarkTheme } from '../redux/theme/themeSelectors';\nimport { useSelector } from 'react-redux';\n\nconst schema = yup.object().shape({\n  email: yup.string().email('Enter valid email. For example user@gmail.com'),\n  newPassword: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters.')\n    .oneOf([yup.ref('repeatNewPassword')], 'Passwords do not match'),\n  repeatNewPassword: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters.')\n    .oneOf([yup.ref('newPassword')], 'Passwords do not match'),\n});\n\nconst RestorePage = () => {\n  const nav = useNavigate();\n  const isDark = useSelector(getIsDarkTheme);\n\n  const { restoreToken } = useParams();\n  const handleSubmit = async (\n    { email, newPassword, repeatNewPassword },\n    { resetForm }\n  ) => {\n    if (!restoreToken) {\n      await axios.post(\n        `https://dreamteam-water-server.onrender.com/api/users/restore`,\n        { email }\n      );\n    } else {\n      await axios.patch(\n        `https://dreamteam-water-server.onrender.com/api/users/restore/${restoreToken}`,\n        { password: newPassword }\n      );\n    }\n\n    resetForm();\n    nav('/');\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      newPassword: '',\n      repeatNewPassword: '',\n    },\n    validationSchema: schema,\n    onSubmit: handleSubmit,\n  });\n  return (\n    <RestoreStyled $isDark={isDark}>\n      <BackgroundStyles>\n        <ContentStyles>\n          <div className=\"box\">\n            <form onSubmit={formik.handleSubmit} className='setting-form-form'>\n              {!restoreToken && (\n                <label className=\"setting-form-name-label\">\n                  <input\n                    className=\"setting-form-input\"\n                    type=\"email\"\n                    name=\"email\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    placeholder=\"Email\"\n                  />\n                </label>\n              )}\n              {restoreToken && (\n                <>\n                  <label className=\"setting-form-name-label\">\n                    <input\n                      style={\n                        formik.touched.newPassword &&\n                        formik.errors.newPassword && {\n                          borderColor: '#EF5050',\n                        }\n                      }\n                      className=\"setting-form-input\"\n                      type=\"text\"\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      name=\"newPassword\"\n                      placeholder=\"Password\"\n                    />\n                  </label>\n                  <label className=\"setting-form-name-label\">\n                    <input\n                      style={\n                        formik.touched.repeatNewPassword &&\n                        formik.errors.repeatNewPassword && {\n                          borderColor: '#EF5050',\n                        }\n                      }\n                      className=\"setting-form-input\"\n                      type=\"text\"\n                      onChange={formik.handleChange}\n                      name=\"repeatNewPassword\"\n                      placeholder=\"Repeat password\"\n                    />\n                  </label>\n                </>\n              )}\n              <button type=\"submit\" className=\"setting-form-submit\">\n                {!restoreToken && 'Send email'}\n                {restoreToken && 'Change password'}\n              </button>\n            </form>\n          </div>\n        </ContentStyles>\n      </BackgroundStyles>\n    </RestoreStyled>\n  );\n};\n\nexport default RestorePage;\n"],"names":["RestoreStyled","styled","_templateObject","_taggedTemplateLiteral","props","$isDark","BackgroundStyles","_templateObject2","background","ContentStyles","_templateObject3","schema","yup","shape","email","newPassword","min","oneOf","repeatNewPassword","nav","useNavigate","isDark","useSelector","getIsDarkTheme","restoreToken","useParams","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee","_ref","_ref2","resetForm","_context","prev","next","axios","concat","password","stop","_x","_x2","apply","arguments","formik","useFormik","initialValues","validationSchema","onSubmit","_jsx","children","className","_jsxs","type","name","onChange","handleChange","onBlur","handleBlur","placeholder","_Fragment","style","touched","errors","borderColor"],"sourceRoot":""}