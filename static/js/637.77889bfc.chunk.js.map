{"version":3,"file":"static/js/637.77889bfc.chunk.js","mappings":"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","sources":["components/AuthForm/Styles.js","components/AuthForm/AuthForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled, { keyframes, css } from \"styled-components\";\n\nconst errorAnimation = keyframes`\n 0% { padding-left: 5px; }\n 20% { padding-left: 0; }\n\n 40% { padding-left: 5px; }\n 60% { padding-left: 0; }\n \n 80% { padding-left: 5px; }\n 100% { padding-left: 0; }\n`;\n\n// 'FormContainer' get props  automatic from 'ContainerFormStyle' if you send them.\nconst Div = styled.div`\n\n  display: flex;\n  flex-direction: ${props => props.$divDiraction || 'row'};\n  justify-content: ${props => props.$justify || 'none'};\n  align-items: ${props => props.$align || 'center'}; \n\n  width: ${props => props.width || 'none'};\n  height: ${props => props.height || 'none'};\n\n  margin-bottom: ${props => props.$marginBott || 'none'};\n\n  gap: ${props => props.$gap || 'none'};\n\n  color: ${props => props.color || 'none'};\n\n  background-color: ${props => props.Backcolor || 'none'};\n\n  ${props => props.$animaOn && css`\n\n    animation-name: ${errorAnimation};\n    animation-duration: 200ms;\n    animation-iteration-count: 1;\n\n  `};\n\n`;\n\nconst Form = styled.form`\n\n  display: flex;\n  flex-direction: ${props => props.$formDiraction || 'row'};\n  align-items: ${props => props.$align || 'center'}; \n\n  font-family: roboto;\n\n  width: ${props => props.width || '100%'};\n  \n\n  background-color: ${props => props.color || 'transparent'};\n\n`;\n\nconst Input = styled.input`\n\n  width: ${props => props.width || '384px'};\n  height: ${props => props.height || '44px'};\n\n  font-family: roboto;\n  font-size: ${props => props.$fontSize || '16px'};\n  color: ${props => props.$inputColor || 'none'};\n\n  padding: 12px 10px;\n\n  margin-bottom: ${props => props.$marginBott || '8px'};\n\n  border-radius: ${props => props.$borderRadius || 'none'};\n  background-color: ${props => props.color || 'transparent'};\n  border: 1px solid ${props => props.$borderColor || '#D7E3FF'};\n  outline: 'none';\n\n  &:focus {\n    border: 1px solid ${props => props.$borderColor || '#D7E3FF'};\n    outline: none;\n  }\n\n`;\n\nconst Text = styled.p`\n\n  font-family: roboto;\n  font-weight: ${props => props.$fontWeight || '500'};\n  font-size: ${props => props.$fontSize || '18px'};\n\n  width: ${props => props.$width || '100%'};\n\n  text-align: ${props => props.$textAlign || 'start'};\n\n  margin-bottom: ${props => props.$marginBott || 'none'};\n\n`;\n\nconst Label = styled.label`\n  \n  width: ${props => props.$width || '100%'};\n\n  font-weight: ${props => props.$fontWeight || '500'};\n\n  margin-bottom: ${props => props.$marginBott || '8px'};\n  \n`;\n\nconst Button = styled.button`\n  \n  width: ${props => props.$width || '100%'};\n  height: ${props => props.height || '44px'};\n\n  font-family: roboto;\n  font-weight: ${props => props.$fontWeight || '600'};\n  font-size: ${props => props.$fontSize || '18px'};\n\n  color: white;\n\n  margin-bottom: ${props => props.$marginBott || '8px'};\n\n  border: none;\n  border-radius: ${props => props.$borderRadius || 'none'};\n\n  background-color: ${props => props.color || '#407BFF'};\n\n  box-shadow: 0px 5px 8px rgba(64, 123, 255, 0.34);\n\n  &:hover {\n    box-shadow: 0px 5px 14px rgba(64, 123, 255, 0.54);\n  }\n\n  &:active {\n    box-shadow: none;\n  }\n`;\n\nconst Link = styled.p`\n  \n  width: ${props => props.$width || 'fit-content'};\n\n  font-weight: ${props => props.$fontWeight || '500'};\n\n  margin-bottom: ${props => props.$marginBott || 'none'};\n\n  cursor: pointer;\n\n  &:hover {\n    color: #FF9D43;\n  }\n  \n`;\n\nconst Styles = (props) => {\n\n  return( \n    <>\n      {props.$div ? <Div {...props}/> : ''}\n      {props.$form ? <Form {...props}/> : ''}\n      {props.$input ? <Input {...props}/> : ''}\n      {props.$p ? <Text {...props}/> : ''}\n      {props.$label ? <Label {...props}/> : ''}\n      {props.$button ? <Button {...props}/> : ''}\n      {props.$link ? <Link {...props}/> : ''}\n    </>\n  )\n};\n\nexport default Styles;","import { useDispatch } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useSpring, animated } from '@react-spring/web'\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport signInAPI from '../../API/Auth/signInAPI';\nimport signUpAPI from '../../API/Auth/signUpAPI';\n\n/* styles import */\nimport Styles from './Styles';\n/* end */\n\nconst AuthForm = () => {\n  \n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // get current location\n  const location = useLocation();\n\n  const isRegistrationPage = location.pathname === '/registration';\n\n  // The 'formik' check all validation expression.\n  // But we have two variants form (logIn and register).\n  // We must create own validate rules function, because\n  // validation expression must be different for each situation.\n\n  const validationLoginForm = {\n    email: Yup.string()\n      .matches(\n        /\\w{0}[0-9a-zA-Zа-яА-Я]+@\\w{0}[a-zA-Zа-яА-Я]+\\.\\w{0}[a-zA-Zа-яА-Я]/,\n        { message: 'Invalid email' }\n      )\n      .required(\"Email field is required\"),\n    password: Yup.string()\n      .min(8, 'Must be 8 characters or more')\n      .required(\"Password field is required\"),\n  };\n\n  const validationRegisterForm = {\n    ...validationLoginForm,\n    repeatPassword: Yup.string()\n      .min(8, 'Must be 8 characters or more')\n      .required(\"RepeatPassword field is required\")\n      .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n  };\n\n  // create 'formik' hook and configurate him\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      repeatPassword: '',\n    },\n\n    //yup stored own validate functions (for email, password...etc)\n    validationSchema: Yup.object(\n      isRegistrationPage ? validationRegisterForm : validationLoginForm\n    ),\n\n    //! 'values' contains ended values all Form inputs. \n    //! They will can get: 'values.<field name>' or change values on {email, password}\n    onSubmit: ({email, password}) => {\n      isRegistrationPage\n           ? dispatch(\n               signUpAPI({ email, password,})\n             )\n           : dispatch(\n               signInAPI({ email, password })\n            );\n\n    },\n  });\n  \n  const springs = useSpring({\n\n    from: { transform: ' rotateX(0) perspective(100px)',},\n    to: [{ transform: ' rotateX(45deg) perspective(100px)'}, { transform: 'rotateX(-45deg) perspective(100px)'}, { transform: 'rotateX(0) perspective(100px)'}],\n\n    config: { duration: 200, mass: 300,},\n\n  });\n\n  const navTo = () => {\n    isRegistrationPage ? navigate('/login') : navigate('/registration');\n  };\n\n  return (\n    <Styles $div $justify={'flex-end'}  $align={'center'}>\n      <Styles $div $divDiraction={'column'} height={isRegistrationPage ? '404px' : '222px'} width={'384px'}>\n        <Styles $p $fontSize={'26px'} $marginBott={'16px'}>\n          {isRegistrationPage ? 'Sign up' : 'Sign in'}\n        </Styles>\n\n        <Styles onSubmit={formik.handleSubmit} $form $formDiraction={'column'}>\n          <Styles $label htmlFor=\"email\">\n            <Styles $p $fontWeight={'400'}>\n              Enter your email\n            </Styles>\n          </Styles>\n          <Styles\n            $input\n            $inputColor={formik.touched.email && formik.errors.email ? '#EF5050' : '#407BFF'}\n            $borderColor={formik.touched.email && formik.errors.email ? '#EF5050' : '#D7E3FF'}\n            $borderRadius={'6px'}\n            $marginBott={'16px'}\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n\n          <Styles $label htmlFor=\"password\">\n            <Styles $p $fontWeight={'400'}>\n              Enter your password\n            </Styles>\n          </Styles>\n          <Styles\n            $input\n            $inputColor={formik.touched.password && formik.errors.password && !formik.errors.email ? '#EF5050' : '#407BFF'}\n            $borderColor={formik.touched.password && formik.errors.password && !formik.errors.email ? '#EF5050' : '#D7E3FF'}\n            $borderRadius={'6px'}\n            $marginBott={isRegistrationPage ? '16px' : '8px'}\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n          />\n\n          {isRegistrationPage && (\n            <>\n              <Styles $label htmlFor=\"repeatPassword\">\n                <Styles $p $fontWeight={'400'}>\n                  Repeat password\n                </Styles>\n              </Styles>\n              <Styles\n                $input\n                $inputColor={formik.touched.repeatPassword && formik.errors.repeatPassword && !formik.errors.password ? '#EF5050' : '#407BFF'}\n                $borderColor={formik.touched.repeatPassword && formik.errors.repeatPassword && !formik.errors.password ? '#EF5050' : '#D7E3FF'}\n                $borderRadius={'6px'}\n                $marginBott={'8px'}\n                id=\"repeatPassword\"\n                name=\"repeatPassword\"\n                type=\"password\"\n                onChange={formik.handleChange}\n                placeholder=\"Repeat password\"\n                onBlur={formik.handleBlur}\n                value={formik.values.repeatPassword}\n              />\n            </>\n          )} \n         \n            <Styles $div $animaOn color={'#EF5050'} height={'8px'} width={'100%'} $justify={'flex-start'} $marginBott={'8px'}>\n\n              <animated.div style={{...springs,}}>\n                {formik.touched.email && formik.errors.email\n                  ? formik.errors.email\n                  : formik.touched.password && formik.errors.password\n                  ? formik.errors.password\n                  : formik.touched.repeatPassword && formik.errors.repeatPassword\n                  ? formik.errors.repeatPassword\n                  : ''}\n              </animated.div>\n              \n            </Styles>\n         \n          <Styles $button type=\"submit\" $borderRadius={'10px'} $marginBott={'16px'}>\n            Submit\n          </Styles>\n        </Styles>\n\n        <Styles $div $justify={'flex-start'} width={'100%'}>\n          <Styles $link onClick={navTo}>To {isRegistrationPage ? 'Sign in' : 'Sign up'}</Styles>\n        </Styles>\n      </Styles>\n    </Styles>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/AuthForm/AuthForm';\nimport Container from 'components/Container/Container';\n\nconst LoginPage = () => {\n  return (\n    <section>\n      <Container>\n        <AuthForm />\n      </Container>\n    </section>\n  );\n};\n\nexport default LoginPage;\n"],"names":["errorAnimation","keyframes","_templateObject","_taggedTemplateLiteral","Div","styled","_templateObject2","props","$divDiraction","$justify","$align","width","height","$marginBott","$gap","color","Backcolor","$animaOn","css","_templateObject3","Form","_templateObject4","$formDiraction","Input","_templateObject5","$fontSize","$inputColor","$borderRadius","$borderColor","Text","_templateObject6","$fontWeight","$width","$textAlign","Label","_templateObject7","Button","_templateObject8","Link","_templateObject9","_jsxs","_Fragment","children","$div","_jsx","_objectSpread","$form","$input","$p","$label","$button","$link","dispatch","useDispatch","navigate","useNavigate","isRegistrationPage","useLocation","pathname","validationLoginForm","email","Yup","matches","message","required","password","min","validationRegisterForm","repeatPassword","oneOf","formik","useFormik","initialValues","validationSchema","onSubmit","_ref","signUpAPI","signInAPI","springs","useSpring","from","transform","to","config","duration","mass","Styles","handleSubmit","htmlFor","touched","errors","id","name","type","placeholder","onChange","handleChange","onBlur","handleBlur","value","values","animated","style","onClick","Container","AuthForm"],"sourceRoot":""}