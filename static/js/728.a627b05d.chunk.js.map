{"version":3,"file":"static/js/728.a627b05d.chunk.js","mappings":"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","sources":["components/DailyNorm/DailyNormStyles.styled.js","components/EditNormaModal/EditNormaModal.styled.js","components/EditNormaModal/EditNormaModal.jsx","components/DailyNorm/DailyNorm.jsx","pages/pageStyles/MainPageStyles.styled.js","components/Calendar/monthsArr.js","components/Calendar/MonthSwitcher/MonthSwitcher.styled.js","components/Calendar/MonthSwitcher/MonthSwitcher.jsx","components/Calendar/MonthSwitcher/useInitialDate.js","components/Calendar/DaysGeneralStats/DaysGeneralStats.styled.js","components/Calendar/DaysGeneralStats/DaysGeneralStats.jsx","components/Calendar/MonthStatistic/MonthStatistic.styled.js","components/Calendar/MonthStatistic/MonthStatistic.jsx","components/Calendar/MonthStatistic/throttle.js","components/Calendar/MonthStatsTable.jsx","pages/MainPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport background from '../../images/main-bg/Bottle-Main-lg.png';\n\nexport const DailyNormStyles = styled.div`\n  background-image: url(${background});\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  .dailyNormaSection {\n    padding: 8px 20px 8px 20px;\n\n    box-shadow: 0px 4px 8px 0px rgba(158, 187, 255, 0.12);\n\n    border: 1px solid #ecf2ff;\n    border-radius: 10px;\n  }\n\n  h2 {\n    font-family: Roboto;\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 1.33;\n\n    text-align: left;\n  }\n\n  .button-info-container {\n    display: flex;\n    flex-direction: row;\n  }\n\n  span {\n    font-family: Roboto;\n    font-size: 22px;\n    font-weight: 700;\n    line-height: 1;\n\n    text-align: left;\n\n    color: rgba(64, 123, 255, 1);\n  }\n\n  button {\n    font-family: Roboto;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1.25;\n\n    border: none;\n    background-color: inherit;\n\n    margin-left: 12px;\n    text-align: left;\n\n    color: rgba(139, 174, 255, 1);\n  }\n\n  /* background-image: url('../../images/main-bg/Bottle-Main-sm.png'); */\n\n  @media screen and (max-width: 767px) {\n    height: 290px;\n    background-image: url(${background});\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    height: 418px;\n    background-image: url(${background});\n  }\n\n  @media screen and (min-width: 1280px) {\n    height: 548px;\n    background-image: url(${background});\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledDailyNormaContainer = styled.div`\n  :root {\n    --primary-text-color: #2f2f2f;\n    --secondary-text-color: #407bff;\n  }\n\n  color: #2f2f2f;\n  text-align: left;\n  font-family: Roboto;\n\n  .list {\n    display: flex;\n    flex-wrap: wrap;\n\n    padding: 0;\n    margin: 0;\n\n    list-style: none;\n  }\n\n  li {\n    margin: 0;\n    padding: 0;\n    margin-bottom: 16px;\n  }\n\n  h1 {\n    font-size: 26px;\n    font-weight: 500;\n    line-height: 1.2;\n\n    margin-bottom: 24px;\n  }\n\n  .form-text {\n    /* display: flex; */\n    align-items: baseline;\n\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1.25;\n  }\n\n  .form-text .formula {\n    font-size: 18px;\n    font-weight: 400;\n    line-height: 0.75;\n\n    color: #407bff;\n  }\n\n  .invisibleText {\n    display: block;\n\n    font-size: 12px;\n    font-weight: 400;\n    line-height: 1.33;\n\n    margin-top: 12px;\n    margin-bottom: 24px;\n    padding: 10px;\n    border-radius: 10px;\n    border: 1px solid rgba(215, 227, 255, 1);\n\n    color: rgba(143, 143, 143, 1);\n\n    span {\n      color: #407bff;\n    }\n  }\n\n  h2 {\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 1.1;\n\n    margin-top: 24px;\n    margin-bottom: 16px;\n  }\n\n  label.form-text {\n    display: inline-block;\n    margin-right: 24px;\n    margin-bottom: 16px;\n  }\n\n  .numberKilo {\n    width: 100%;\n    height: 44px;\n\n    border: 1px solid #d7e3ff;\n    border-radius: 6px;\n    padding-left: 10px;\n    margin-top: 8px;\n\n    font-style: normal;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1.25;\n    color: #8f8f8f;\n  }\n\n  h2 .water {\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 1.1;\n  }\n\n  .form-text .norma {\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 1.33;\n\n    color: #407bff;\n  }\n\n  .btn-save {\n    width: 100%;\n    height: 36px;\n    padding: 8px, 30px, 8px, 30px;\n    border-color: transparent;\n    border-radius: 10px;\n    background-color: #407bff;\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 20px;\n\n    text-align: center;\n    color: rgba(255, 255, 255, 1);\n  }\n\n  /* @media screen and (max-width: 767px) {\n    height: 290px;\n  } */\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    .container {\n      max-width: 768px;\n    }\n\n    button.btn-save {\n      display: block;\n      width: 0;\n      padding: 10px 30px;\n      margin-left: auto;\n    }\n    /* height: 418px; */\n  }\n\n  @media screen and (min-width: 1280px) {\n    /* height: 548px; */\n  }\n`;\n","import { StyledDailyNormaContainer } from './EditNormaModal.styled';\n\nconst EditNormaModal = () => {\n  return (\n    <StyledDailyNormaContainer>\n      <h1>My daily norma</h1>\n      <form action=\"#\" name=\"save_form\">\n        <ul className=\"list\">\n          <li className=\"link\">\n            <p className=\"form-text\">\n              For girl: <span className=\"formula\"> V=(M*0.03) + (T*0.4)</span>\n            </p>\n          </li>\n          <li className=\"link\">\n            <p className=\"form-text\">\n              For man: <span className=\"formula\"> V=(M*0,04) + (T*0,6)</span>\n            </p>\n          </li>\n        </ul>\n\n        <p className=\"invisibleText\">\n          <span>&#42;</span>V is the volume of the water norm in liters per day,\n          M is your body weight, T is the time of active sports, or another type\n          of activity commensurate in terms of loads (in the absence of these,\n          you must set 0)\n        </p>\n        <h2>Calculate your rate:</h2>\n\n        <label htmlFor=\"#\" className=\"form-text\">\n          <input type=\"radio\" name=\"gender\" value=\"woman\" />\n          For woman\n        </label>\n        <label htmlFor=\"#\" className=\"form-text\">\n          <input type=\"radio\" name=\"gender\" value=\"man\" />\n          For man\n        </label>\n\n        <label htmlFor=\"#\" className=\"form-text\">\n          Your weight in kilograms:\n          <input\n            type=\"number\"\n            name=\"number\"\n            // value=\"0\"\n            className=\"numberKilo\"\n          />\n        </label>\n        <p className=\"form-text\">\n          The required amount of water in liters per day:{' '}\n          <span className=\"norma\">1.8L</span>\n        </p>\n\n        <h2 className=\"water\">Write down how much water you will drink:</h2>\n        <input\n          type=\"number\"\n          name=\"number\"\n          // value=\"0\"\n          className=\"numberKilo\"\n        />\n\n        <button type=\"submit\" className=\"btn-save\">\n          Save\n        </button>\n      </form>\n    </StyledDailyNormaContainer>\n  );\n};\n\nexport default EditNormaModal;\n","import { DailyNormStyles } from './DailyNormStyles.styled';\nimport { Modal } from '../Modal/Modal';\nimport { useState } from 'react';\nimport EditNormaModal from 'components/EditNormaModal/EditNormaModal';\n\nconst DailyNorm = () => {\n  const [isShowEditModal, setIsShowEditModal] = useState(false);\n\n  return (\n    <DailyNormStyles>\n      <div className=\"dailyNormaSection\">\n        <h2>My daily norma</h2>\n        <div className=\"button-info-container\">\n          <span>1.5 L</span>\n          <button type=\"button\" onClick={() => setIsShowEditModal(true)}>\n            Edit\n          </button>\n        </div>\n      </div>\n\n      {isShowEditModal && (\n        <Modal\n          closeModal={() => setIsShowEditModal(false)}\n          children={<EditNormaModal />}\n        />\n      )}\n    </DailyNormStyles>\n  );\n};\n\nexport default DailyNorm;\n","import styled from 'styled-components';\n\nexport const MainPageStyles = styled.section`\n  .main-container {\n    width: 100%;\n    display: flex;\n  }\n\n  .left-side {\n    border: 1px solid green;\n  }\n\n  .right-side {\n    border-radius: 10px;\n    background: var(--Secondary-color-2, #ecf2ff);\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.3);\n  }\n\n  @media screen and (max-width: 767px) {\n    padding-top: 24px;\n    padding-bottom: 40px;\n    .left-side {\n      height: 504px;\n      width: 100%;\n      padding-bottom: 40px;\n    }\n\n    .right-side {\n      padding: 24px 8px;\n    }\n\n    .today {\n      width: 100%;\n      height: 258px;\n      background-color: gray;\n    }\n  }\n\n  @media screen and (max-width: 1279px) {\n    .main-container {\n      flex-direction: column;\n    }\n\n    .left-side {\n      width: 100%;\n    }\n\n    .right-side {\n      width: 100%;\n    }\n\n    .status-bar {\n      width: 100%;\n      height: 134px;\n      background-color: gray;\n      padding-top: 16px;\n    }\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    padding-top: 16px;\n    .left-side {\n      height: 548px;\n      width: 100%;\n    }\n\n    .today {\n      width: 100%;\n      height: 260px;\n      background-color: gray;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    .left-side {\n      padding-bottom: 40px;\n    }\n\n    .right-side {\n      padding: 32px 24px;\n    }\n    .status-bar {\n      width: 100%;\n      height: 90px;\n      background-color: gray;\n      padding-top: 24px;\n    }\n\n    .today {\n      width: 100%;\n      height: 260px;\n      background-color: gray;\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 22px;\n    .left-side {\n      height: 680px;\n      width: 624px;\n      padding-right: 32px;\n    }\n\n    .right-side {\n      width: 592px;\n    }\n\n    .today {\n      width: 544px;\n      height: 260px;\n      background-color: gray;\n    }\n  }\n`;\n","export const monthsArr = [\n  { name: 'January', numberOfDays: 31 },\n  { name: 'February', numberOfDays: 28 },\n  { name: 'March', numberOfDays: 31 },\n  { name: 'April', numberOfDays: 30 },\n  { name: 'May', numberOfDays: 31 },\n  { name: 'June', numberOfDays: 30 },\n  { name: 'July', numberOfDays: 31 },\n  { name: 'August', numberOfDays: 31 },\n  { name: 'September', numberOfDays: 30 },\n  { name: 'October', numberOfDays: 31 },\n  { name: 'November', numberOfDays: 30 },\n  { name: 'December', numberOfDays: 31 },\n];\n\n// function isLeapYear(year) {\n//   return (year % 4 === 0 && year % 100 !== 0) ||\n//     year % 400 === 0 ? true : false\n// }\n\n// const statistic = {\n//   2023: { 12: { 1: { '07:00': '10 ml', '08:00': '50ml' }, 5: { '07:00': '10ml', '08:00': '50ml' } } },\n//   2024: { 12: { 1: { '07:00': '10 ml', '08:00': '50ml' }, 5: { '07:00': '10ml', '08:00': '50ml' } } }\n// }\n\n// const monthStatistic = {\n//   2023: { 12: { 1: { '07:00': '10 ml', '08:00': '50ml' }, 5: { '07:00': '10ml', '08:00': '50ml' } } },\n//   2024: { 12: { 1: { '07:00': '10 ml', '08:00': '50ml' }, 5: { '07:00': '10ml', '08:00': '50ml' } } }\n// }\n","import styled from 'styled-components';\n\nexport const MonthSwitcherContainer = styled.div`\n\n  display: flex;\n  gap: 12px;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 24px;\n\n    h2{\n      color: #2F2F2F;\n      font-family: Roboto;\n      font-size: 26px;\n      font-weight: 500;\n      line-height: 1,23\n    }\n\n    div{\n      display: flex;\n      gap: 12px;\n      align-items: center;\n    }\n  \n    h3{\n      color:#407BFF;\n      text-align: center;\n      font-family: Roboto;\n      font-size: 16px;\n      line-height: 1.25;\n      min-width: 120px;\n      display: block;\n    }\n\n    button {\n      border: none;\n      background-color: transparent;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      color: #407BFF;\n      width: 14px;\n      height: 14px;\n      padding: 0;\n      cursor: pointer;\n\n      &:disabled {\n       opacity: 0;\n  }\n  }\n`;","import { useEffect, useState } from 'react';\nimport { useInitialDate } from './useInitialDate';\nimport { monthsArr } from '../monthsArr';\nimport { SlArrowLeft, SlArrowRight } from 'react-icons/sl';\nimport { MonthSwitcherContainer } from './MonthSwitcher.styled';\n\nconst MonthSwitcher = ({ setSelectedMonth }) => {\n  const [today] = useInitialDate();\n  const [pickedDate, setPickedDate] = useState(today);\n  const [registrationDate] = useState({ day: 1, month: 9, year: 2023 });\n\n  useEffect(() => {\n    const newCurrentMonth = {\n      day: null,\n      month: pickedDate.month,\n      year: pickedDate.year,\n    };\n    setSelectedMonth(newCurrentMonth);\n  }, [pickedDate, setSelectedMonth]);\n\n  const handlePrevMonth = () => {\n    pickedDate.month === 0\n      ? setPickedDate(prev => ({ ...prev, month: 11, year: prev.year - 1 }))\n      : setPickedDate(prev => ({ ...prev, month: prev.month - 1 }));\n  };\n\n  const handleNextMonth = () => {\n    pickedDate.month === 11\n      ? setPickedDate(prev => ({ ...prev, month: 0, year: prev.year + 1 }))\n      : setPickedDate(prev => ({ ...prev, month: prev.month + 1 }));\n  };\n\n  const isButtonPrevDisabled = () => {\n    return (registrationDate.day <= 2 &&\n      registrationDate.month === 0 &&\n      pickedDate.month === 11 &&\n      registrationDate.year === pickedDate.year + 1) ||\n      (registrationDate.day <= 2 &&\n        registrationDate.month - 1 === pickedDate.month &&\n        registrationDate.year === pickedDate.year) ||\n      (registrationDate.day > 2 &&\n        registrationDate.month === pickedDate.month &&\n        registrationDate.year === pickedDate.year)\n      ? true\n      : false;\n  };\n\n  const isButtonNextDisabled = () => {\n    return (\n      pickedDate.year >= today.year + 5 && pickedDate.month === today.month\n    );\n  };\n\n  return (\n    <MonthSwitcherContainer>\n      <h2>Month</h2>\n      <div>\n        <button onClick={handlePrevMonth} disabled={isButtonPrevDisabled()}>\n        <SlArrowLeft />\n      </button>\n      <h3>\n        {monthsArr[pickedDate.month].name}, {pickedDate.year}\n      </h3>\n      <button onClick={handleNextMonth} disabled={isButtonNextDisabled()}>\n        <SlArrowRight />\n        </button>\n        </div>\n    </MonthSwitcherContainer>\n  );\n};\n\nexport default MonthSwitcher;\n","import { useState } from \"react\";\n\nexport const useInitialDate = () => {\n  const currentDate = new Date();\n\n  const [today, setToday] = useState({\n      day: currentDate.getDate(),\n      month: currentDate.getMonth(),\n      year: currentDate.getFullYear()\n  });\n\n  return [today, setToday];\n};","\nimport styled from 'styled-components';\n\nexport const WaterStatsContainer = styled.div`\nposition: absolute;\n\n  top: ${props => props.$top}px;\n  left: ${props => props.$left}px;\n  transform: translate(-100%, -100%);\ndisplay: flex;\nflex-direction: column;\ngap: 16px;\npadding: 24px 16px;\nwidth: 292px;\nheight: 188px;\nbackground-color: #fff;\ncolor:#2F2F2F;\nfont-family: Roboto;\nfont-size: 16px;\nfont-weight: 400;\nline-height: 1.25;\nborder-radius: 10px;\nbox-shadow: 0px 4px 4px 0px rgba(64, 123, 255, 0.30);\n\ndiv{\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: #407BFF;\n\n    button {\n        border: none;\n        background-color: transparent;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        color: #407BFF;\n        width: 16px;\n        height: 16px;\n        padding: 0;\n        cursor: pointer;\n\n     svg{\n        width: 16px;\n        height: 16px;\n         }\n}\n\n}\n\n    span{\n        color:#407BFF;\n        font-size: 18px;\n        font-weight: 500;\n        line-height: 1.33; \n    }\n\n\n\n`","import { useEffect } from \"react\";\nimport { WaterStatsContainer } from \"./DaysGeneralStats.styled\";\nimport { TfiClose } from \"react-icons/tfi\";\nimport { monthsArr } from \"../monthsArr\";\n\nconst DaysGeneralStats = ({ setModalVisible, top, left, selectedMonth, selectedDay, setSelectedDay}) => {\n\nuseEffect(() => {\n    function handleClickOutside(event) {\n      if (!event.target.closest('[data-modal-container]')) {\n        setModalVisible(false);\n      }\n    }\n    function onEsc({ code }) {\n      if (code !== 'Escape') {\n        return;\n      }\n      setModalVisible(false);\n    }\n\n    document.addEventListener('mousedown', handleClickOutside);\n    document.addEventListener('keydown', onEsc);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n      document.removeEventListener('keydown', onEsc);\n    };\n}, [setModalVisible]);\n  \n  const closeModal = () => {\n    setModalVisible(false);\n  }\n  \n  return (\n      <WaterStatsContainer data-modal-container $top={top} $left={left}>\n          <div>\n        <p>{selectedMonth.day}, {monthsArr[selectedMonth.month].name }</p>\n              <button onClick={closeModal} ><TfiClose/></button>\n          </div>\n          <p>Daily norma: <span>2L</span></p>\n          <p>Fulfillment of the daily norm: <span>_%</span></p>\n          <p>How many servings of water: <span>6</span></p>\n    </WaterStatsContainer>\n  );\n};\n\nexport default DaysGeneralStats;\n","import styled from // , { css }\n'styled-components';\n\nexport const MonthStatisticlist = styled.div`\n\n  display: flex;\n  gap: 22px;\n  align-items: start;\n  padding-top: 16px;\n  flex-wrap: wrap;\n  list-style: none;\n\n  li {\n    text-align: center;\n    height: 52px;\n    width: 34px;\n  }\n\n  button {\n    border: none;\n    background-color: #fff;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #2f2f2f;\n    width: 34px;\n    height: 34px;\n    padding: 7px;\n    cursor: pointer;\n    font-family: Roboto;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1, 25;\n    border-radius: 50%;\n\n    &[data-fulfilled='false'] {\n      border: 1px solid #ff9d43;\n    }\n\n    //   &:disabled {\n    //    opacity: 0;\n  }\n\n  p {\n    color: #9ebbff;\n    font-family: Roboto;\n    size: 12px;\n    font-weight: 400;\n    line-height: 1.5;\n  }\n`;\n\n// [{ date: { year, month, day }, percent }, { date: { year, month, day }, percent }]\n// [\n//     {\n//         \"date\": {\n//             \"year\": 2024,\n//             \"month\": \"01\",\n//             \"day\": 1\n//         },\n//         \"percent\": 157.7\n//     },\n//     {\n//         \"date\": {\n//             \"year\": 2024,\n//             \"month\": \"01\",\n//             \"day\": 3\n//         },\n//         \"percent\": 0\n//     }\n// ]\n\nexport const Li = styled.li.attrs(props => ({\n  // Every <PasswordInput /> should be type=\"password\"\n}))``;\n","import { useCallback, useState } from 'react';\nimport DaysGeneralStats from '../DaysGeneralStats/DaysGeneralStats';\nimport { monthsArr } from '../monthsArr';\nimport { MonthStatisticlist } from './MonthStatistic.styled';\n// import { throttle } from 'lodash';\nimport { throttle } from './throttle';\n\nconst MonthStatistic = ({ selectedMonth, setSelectedMonth }) => {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalPosition, setModalPosition] = useState({ top: 0, left: 0 });\n\n  const currentMonth = (month, statistic) => {\n    const daysArr = [];\n    const monthData = monthsArr[month];\n    if (!monthData) {\n      return daysArr;\n    }\n    for (let i = 1; i <= monthData.numberOfDays; i += 1) {\n      const day = statistic.find(statisticOneDay => statisticOneDay.date === i);\n      if (day) {\n        daysArr.push({ date: i, percentage: day.percentage });\n      } else {\n        daysArr.push({ date: i, percentage: '' });\n      }\n    }\n    return daysArr;\n  };\n\n  const stat = [\n    { date: 1, percentage: 120 },\n    { date: 2, percentage: 20 },\n    { date: 6, percentage: 150 },\n    { date: 8, percentage: 80 },\n  ];\n\n  const handleMouseEnter = useCallback(\n    () =>\n      throttle(event => {\n        const day = Number(event.target.innerText);\n        setSelectedMonth(prevState => ({ ...prevState, day }));\n\n        const buttonRect = event.target.getBoundingClientRect();\n        const buttonCenterX = buttonRect.left + buttonRect.width / 2;\n        const buttonCenterY = buttonRect.top + window.scrollY;\n\n        setModalPosition({ top: buttonCenterY, left: buttonCenterX });\n        setModalVisible(true);\n      }, 500),\n    [setSelectedMonth]\n  );\n\n  return (\n    <>\n      <MonthStatisticlist>\n        {currentMonth(selectedMonth.month, stat).map(({ date, percentage }) => (\n          <li key={date}>\n            <button\n              onMouseEnter={handleMouseEnter}\n              data-fulfilled={percentage > 100 ? 'true' : 'false'}\n            >\n              {date}\n            </button>\n            <p>{percentage !== '' && `${percentage}%`}</p>\n          </li>\n        ))}\n      </MonthStatisticlist>\n      {modalVisible && (\n        <DaysGeneralStats\n          top={modalPosition.top}\n          left={modalPosition.left}\n          setModalVisible={setModalVisible}\n          selectedMonth={selectedMonth}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MonthStatistic;\n","export function throttle(func, delay) {\n  let isThrottled = false;\n  let lastArgs = null;\n\n  function wrapper(...args) {\n    if (isThrottled) {\n      lastArgs = args;\n      return;\n    }\n\n    func.apply(this, args);\n    isThrottled = true;\n\n    setTimeout(() => {\n      isThrottled = false;\n      if (lastArgs) {\n        wrapper.apply(this, lastArgs);\n        lastArgs = null;\n      }\n    }, delay);\n  }\n\n  return wrapper;\n}","import { useState } from 'react';\nimport MonthSwitcher from './MonthSwitcher/MonthSwitcher';\nimport MonthStatistic from './MonthStatistic/MonthStatistic';\n\nconst MonthStatsTable = () => {\n  const [selectedMonth, setSelectedMonth] = useState({\n    day:null,\n    month: null,\n    year: null,\n  });\n\n  return (\n    <div >\n      <MonthSwitcher setSelectedMonth={setSelectedMonth} />\n      <MonthStatistic selectedMonth={selectedMonth} setSelectedMonth={setSelectedMonth} /> \n    </div>\n  );\n};\n\nexport default MonthStatsTable;","import Container from 'components/Container/Container';\nimport DailyNorm from 'components/DailyNorm/DailyNorm';\nimport { MainPageStyles } from './pageStyles/MainPageStyles.styled';\nimport MonthStatsTable from 'components/Calendar/MonthStatsTable';\n\nconst MainPage = () => {\n  return (\n    <main>\n      <MainPageStyles>\n        <Container>\n          <div className=\"main-container\">\n            <div className=\"left-side\">\n              <DailyNorm />\n              <div className=\"status-bar\"> Status bar</div>\n            </div>\n            <div className=\"right-side\">\n              <div className=\"today\">Today</div>\n              <MonthStatsTable/>\n            </div>\n          </div>\n        </Container>\n      </MainPageStyles>\n    </main>\n  );\n};\n\nexport default MainPage;\n"],"names":["DailyNormStyles","styled","_templateObject","_taggedTemplateLiteral","background","StyledDailyNormaContainer","_jsxs","children","_jsx","action","name","className","htmlFor","type","value","_useState","useState","_useState2","_slicedToArray","isShowEditModal","setIsShowEditModal","onClick","Modal","closeModal","EditNormaModal","MainPageStyles","monthsArr","numberOfDays","MonthSwitcherContainer","_ref","setSelectedMonth","_useInitialDate","currentDate","Date","day","getDate","month","getMonth","year","getFullYear","useInitialDate","today","pickedDate","setPickedDate","_useState3","registrationDate","useEffect","newCurrentMonth","prev","_objectSpread","disabled","SlArrowLeft","SlArrowRight","WaterStatsContainer","props","$top","$left","setModalVisible","top","left","selectedMonth","selectedDay","setSelectedDay","handleClickOutside","event","target","closest","onEsc","_ref2","code","document","addEventListener","removeEventListener","TfiClose","MonthStatisticlist","_templateObject2","modalVisible","_useState4","modalPosition","setModalPosition","handleMouseEnter","useCallback","func","delay","isThrottled","lastArgs","wrapper","_this","_len","arguments","length","args","Array","_key","apply","this","setTimeout","throttle","Number","innerText","prevState","buttonRect","getBoundingClientRect","buttonCenterX","width","buttonCenterY","window","scrollY","_Fragment","statistic","daysArr","monthData","_loop","i","find","statisticOneDay","date","push","percentage","currentMonth","map","onMouseEnter","concat","DaysGeneralStats","MonthSwitcher","MonthStatistic","Container","DailyNorm","MonthStatsTable"],"sourceRoot":""}