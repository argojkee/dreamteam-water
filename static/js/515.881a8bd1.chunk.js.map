{"version":3,"file":"static/js/515.881a8bd1.chunk.js","mappings":"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","sources":["components/DailyNorm/DailyNormStyles.styled.js","components/DailyNorm/DailyNorm.jsx","pages/pageStyles/MainPageStyles.styled.js","components/Calendar/monthsArr.js","components/Calendar/MonthSwitcher/MonthSwitcher.styled.js","components/Calendar/MonthSwitcher/MonthSwitcher.jsx","components/Calendar/MonthSwitcher/useInitialDate.js","components/Calendar/MonthStatistic/MonthStatistic.styled.js","components/Calendar/MonthStatistic/MonthStatistic.jsx","components/Calendar/MonthStatsTable.jsx","pages/MainPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport background from '../../images/main-bg/Bottle-Main-sm.png';\n\nexport const DailyNormStyles = styled.div`\n  background-image: url(${background});\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  .dailyNormaSection {\n    width: 164px;\n    height: 76px;\n\n    padding: 8px 20px 8px 20px;\n\n    background-color: linear-gradient(0deg, #ffffff, #ffffff),\n      linear-gradient(0deg, #ecf2ff, #ecf2ff);\n    border: 1px solid rgba(236, 242, 255, 1);\n    border-radius: 10px;\n  }\n\n  h2 {\n    font-family: Roboto;\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 1.33;\n\n    text-align: left;\n  }\n\n  span {\n    font-family: Roboto;\n    font-size: 22px;\n    font-weight: 700;\n    line-height: 1;\n\n    text-align: left;\n\n    color: rgba(64, 123, 255, 1);\n  }\n\n  button {\n    font-family: Roboto;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1.25;\n\n    border: none;\n    background-color: inherit;\n\n    /* width: 28px;\n    height: 20px; */\n\n    text-align: left;\n\n    color: rgba(139, 174, 255, 1);\n  }\n\n  /* background-image: url('../../images/main-bg/Bottle-Main-sm.png'); */\n\n  @media screen and (max-width: 767px) {\n    height: 290px;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    height: 418px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    height: 548px;\n  }\n`;\n","import { DailyNormStyles } from './DailyNormStyles.styled';\n\nconst DailyNorm = () => {\n  return (\n    <DailyNormStyles>\n      <div className=\"dailyNormaSection\">\n        <h2>My Daily norma</h2>\n        <span>1.5 L</span>\n        <button type=\"button\">Edit</button>\n      </div>\n    </DailyNormStyles>\n  );\n};\n\nexport default DailyNorm;\n","import styled from 'styled-components';\n\nexport const MainPageStyles = styled.section`\n  .main-container {\n    width: 100%;\n    display: flex;\n  }\n\n  .left-side {\n    border: 1px solid green;\n  }\n\n  .right-side {\n    border-radius: 10px;\n    background: var(--Secondary-color-2, #ecf2ff);\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.3);\n  }\n\n  @media screen and (max-width: 767px) {\n    padding-top: 24px;\n    padding-bottom: 40px;\n    .left-side {\n      height: 504px;\n      width: 100%;\n      padding-bottom: 40px;\n    }\n\n    .right-side {\n      padding: 24px 8px;\n    }\n\n    .today {\n      width: 100%;\n      height: 258px;\n      background-color: gray;\n    }\n  }\n\n  @media screen and (max-width: 1279px) {\n    .main-container {\n      flex-direction: column;\n    }\n\n    .left-side {\n      width: 100%;\n    }\n\n    .right-side {\n      width: 100%;\n    }\n\n    .status-bar {\n      width: 100%;\n      height: 134px;\n      background-color: gray;\n      padding-top: 16px;\n    }\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    padding-top: 16px;\n    .left-side {\n      height: 548px;\n      width: 100%;\n    }\n\n    .today {\n      width: 100%;\n      height: 260px;\n      background-color: gray;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    .left-side {\n      padding-bottom: 40px;\n    }\n\n    .right-side {\n      padding: 32px 24px;\n    }\n    .status-bar {\n      width: 100%;\n      height: 90px;\n      background-color: gray;\n      padding-top: 24px;\n    }\n\n    .today {\n      width: 100%;\n      height: 260px;\n      background-color: gray;\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 22px;\n    .left-side {\n      height: 680px;\n      width: 624px;\n      padding-right: 32px;\n    }\n\n    .right-side {\n      width: 592px;\n    }\n\n    .today {\n      width: 544px;\n      height: 260px;\n      background-color: gray;\n    }\n  }\n`;\n","export const monthsArr = [\n  { name: 'January', numberOfDays: 31 },\n  { name: 'February', numberOfDays: 28 },\n  { name: 'March', numberOfDays: 31 },\n  { name: 'April', numberOfDays: 30 },\n  { name: 'May', numberOfDays: 31 },\n  { name: 'June', numberOfDays: 30 },\n  { name: 'July', numberOfDays: 31 },\n  { name: 'August', numberOfDays: 31 },\n  { name: 'September', numberOfDays: 30 },\n  { name: 'October', numberOfDays: 31 },\n  { name: 'November', numberOfDays: 30 },\n  { name: 'December', numberOfDays: 31 },\n];\n\n// function isLeapYear(year) {\n//   return (year % 4 === 0 && year % 100 !== 0) ||\n//     year % 400 === 0 ? true : false\n// }\n\n// const statistic = {\n//   2023: { 12: { 1: { '07:00': '10 ml', '08:00': '50ml' }, 5: { '07:00': '10ml', '08:00': '50ml' } } },\n//   2024: { 12: { 1: { '07:00': '10 ml', '08:00': '50ml' }, 5: { '07:00': '10ml', '08:00': '50ml' } } }\n// }\n\n// const monthStatistic = {\n//   2023: { 12: { 1: { '07:00': '10 ml', '08:00': '50ml' }, 5: { '07:00': '10ml', '08:00': '50ml' } } },\n//   2024: { 12: { 1: { '07:00': '10 ml', '08:00': '50ml' }, 5: { '07:00': '10ml', '08:00': '50ml' } } }\n// }\n","import styled from 'styled-components';\n\nexport const MonthSwitcherContainer = styled.div`\n\n  display: flex;\n  gap: 12px;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 24px;\n\n    h2{\n      color: #2F2F2F;\n      font-family: Roboto;\n      font-size: 26px;\n      font-weight: 500;\n      line-height: 1,23\n    }\n\n    div{\n      display: flex;\n      gap: 12px;\n      align-items: center;\n    }\n  \n    h3{\n      color:#407BFF;\n      text-align: center;\n      font-family: Roboto;\n      font-size: 16px;\n      line-height: 1.25;\n      min-width: 120px;\n      display: block;\n    }\n\n    button {\n      border: none;\n      background-color: transparent;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      color: #407BFF;\n      width: 14px;\n      height: 14px;\n      padding: 0;\n      cursor: pointer;\n\n      &:disabled {\n       opacity: 0;\n  }\n  }\n`;","import { useEffect, useState } from 'react';\nimport { useInitialDate } from './useInitialDate';\nimport { monthsArr } from '../monthsArr';\nimport { SlArrowLeft, SlArrowRight } from 'react-icons/sl';\nimport { MonthSwitcherContainer } from './MonthSwitcher.styled';\n\nconst MonthSwitcher = ({ changeSelectedMonth }) => {\n  const [today] = useInitialDate();\n  const [pickedDate, setPickedDate] = useState(today);\n  const [registrationDate] = useState({ day: 1, month: 9, year: 2023 });\n\n  useEffect(() => {\n    const newCurrentMonth = {\n      day: null,\n      month: pickedDate.month,\n      year: pickedDate.year,\n    };\n    changeSelectedMonth(newCurrentMonth);\n  }, [pickedDate, changeSelectedMonth]);\n\n  const handlePrevMonth = () => {\n    pickedDate.month === 0\n      ? setPickedDate(prev => ({ ...prev, month: 11, year: prev.year - 1 }))\n      : setPickedDate(prev => ({ ...prev, month: prev.month - 1 }));\n  };\n\n  const handleNextMonth = () => {\n    pickedDate.month === 11\n      ? setPickedDate(prev => ({ ...prev, month: 0, year: prev.year + 1 }))\n      : setPickedDate(prev => ({ ...prev, month: prev.month + 1 }));\n  };\n\n  const isButtonPrevDisabled = () => {\n    return (registrationDate.day <= 2 &&\n      registrationDate.month === 0 &&\n      pickedDate.month === 11 &&\n      registrationDate.year === pickedDate.year + 1) ||\n      (registrationDate.day <= 2 &&\n        registrationDate.month - 1 === pickedDate.month &&\n        registrationDate.year === pickedDate.year) ||\n      (registrationDate.day > 2 &&\n        registrationDate.month === pickedDate.month &&\n        registrationDate.year === pickedDate.year)\n      ? true\n      : false;\n  };\n\n  const isButtonNextDisabled = () => {\n    return (\n      pickedDate.year >= today.year + 5 && pickedDate.month === today.month\n    );\n  };\n\n\n  return (\n    <MonthSwitcherContainer>\n      <h2>Month</h2>\n      <div>\n        <button onClick={handlePrevMonth} disabled={isButtonPrevDisabled()}>\n        <SlArrowLeft />\n      </button>\n      <h3>\n        {monthsArr[pickedDate.month].name}, {pickedDate.year}\n      </h3>\n      <button onClick={handleNextMonth} disabled={isButtonNextDisabled()}>\n        <SlArrowRight />\n        </button>\n        </div>\n    </MonthSwitcherContainer>\n  );\n};\n\nexport default MonthSwitcher;\n","import { useState } from \"react\";\n\nexport const useInitialDate = () => {\n  const currentDate = new Date();\n\n  const [today, setToday] = useState({\n      day: currentDate.getDate(),\n      month: currentDate.getMonth(),\n      year: currentDate.getFullYear()\n  });\n\n  return [today, setToday];\n};","import styled from // , { css }\n'styled-components';\n\nexport const MonthStatisticlist = styled.div`\n  display: flex;\n  gap: 22px;\n  align-items: start;\n  padding-top: 16px;\n\n  li {\n    text-align: center;\n    height: 52px;\n    width: 34px;\n  }\n\n  button {\n    border: none;\n    background-color: #fff;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #2f2f2f;\n    width: 34px;\n    height: 34px;\n    padding: 7px;\n    cursor: pointer;\n    font-family: Roboto;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1, 25;\n    border-radius: 50%;\n\n    &[data-fulfilled='false'] {\n      border: 1px solid #ff9d43;\n    }\n\n    //   &:disabled {\n    //    opacity: 0;\n  }\n\n  p {\n    color: #9ebbff;\n    font-family: Roboto;\n    size: 12px;\n    font-weight: 400;\n    line-height: 1.5;\n  }\n`;\n\n// [{ date: { year, month, day }, percent }, { date: { year, month, day }, percent }]\n// [\n//     {\n//         \"date\": {\n//             \"year\": 2024,\n//             \"month\": \"01\",\n//             \"day\": 1\n//         },\n//         \"percent\": 157.7\n//     },\n//     {\n//         \"date\": {\n//             \"year\": 2024,\n//             \"month\": \"01\",\n//             \"day\": 3\n//         },\n//         \"percent\": 0\n//     }\n// ]\n\nexport const Li = styled.li.attrs(props => ({\n  // Every <PasswordInput /> should be type=\"password\"\n}))``;\n","// import { ClassNames } from \"@emotion/react\";\nimport { monthsArr } from '../monthsArr';\nimport { MonthStatisticlist } from './MonthStatistic.styled';\nconst MonthStatistic = ({ selectedMonth }) => {\n  const currentMonth = (month, statistic) => {\n    const daysArr = [];\n    const monthData = monthsArr[month];\n    if (!monthData) {\n      return daysArr;\n    }\n    for (let i = 1; i <= monthData.numberOfDays; i += 1) {\n      const day = statistic.find(statisticOneDay => statisticOneDay.date === i);\n      if (day) {\n        daysArr.push({ date: i, percentage: day.percentage });\n      } else {\n        daysArr.push({ date: i, percentage: '0' });\n      }\n    }\n    return daysArr;\n  };\n\n  const stat = [\n    { date: 1, percentage: 120 },\n    { date: 2, percentage: 20 },\n    { date: 6, percentage: 150 },\n    { date: 8, percentage: 80 },\n  ];\n\n  return (\n    <>\n      <MonthStatisticlist\n        style={{ display: 'flex', flexWrap: 'wrap', listStyle: 'none' }}\n      >\n        {currentMonth(selectedMonth.month, stat).map(({ date, percentage }) => (\n          <li key={date}>\n            <button\n              title=\"Click to view daily statistics\"\n              data-fulfilled={percentage > 100 ? 'true' : 'false'}\n            >\n              {date}\n            </button>\n            <p>{percentage !== '' && `${percentage}%`}</p>\n          </li>\n        ))}\n      </MonthStatisticlist>\n    </>\n  );\n};\n\nexport default MonthStatistic;\n\n// {percentage < 100 ? 'true' : 'false'}\n","import { useState } from 'react';\nimport MonthSwitcher from './MonthSwitcher/MonthSwitcher';\nimport MonthStatistic from './MonthStatistic/MonthStatistic';\n\n\n\nconst MonthStatsTable = () => {\n  const [selectedMonth, setSelectedMonth] = useState({\n    day: null,\n    month: null,\n    year: null,\n  });\n\n  return (\n    <>\n      <MonthSwitcher changeSelectedMonth={setSelectedMonth} />\n      <MonthStatistic  selectedMonth={selectedMonth } />\n    </>\n  );\n};\n\nexport default MonthStatsTable;\n","import Container from 'components/Container/Container';\nimport DailyNorm from 'components/DailyNorm/DailyNorm';\nimport { MainPageStyles } from './pageStyles/MainPageStyles.styled';\nimport MonthStatsTable from 'components/Calendar/MonthStatsTable';\n\nconst MainPage = () => {\n  return (\n    <main>\n      <MainPageStyles>\n        <Container>\n          <div className=\"main-container\">\n            <div className=\"left-side\">\n              <DailyNorm />\n              <div className=\"status-bar\"> Status bar</div>\n            </div>\n            <div className=\"right-side\">\n              <div className=\"today\">Today</div>\n              <MonthStatsTable/>\n            </div>\n          </div>\n        </Container>\n      </MainPageStyles>\n    </main>\n  );\n};\n\nexport default MainPage;\n"],"names":["DailyNormStyles","styled","_templateObject","_taggedTemplateLiteral","background","_jsx","children","_jsxs","className","type","MainPageStyles","monthsArr","name","numberOfDays","MonthSwitcherContainer","_ref","changeSelectedMonth","_useInitialDate","currentDate","Date","_useState","useState","day","getDate","month","getMonth","year","getFullYear","_useState2","_slicedToArray","useInitialDate","today","pickedDate","setPickedDate","_useState3","registrationDate","useEffect","newCurrentMonth","onClick","prev","_objectSpread","disabled","SlArrowLeft","SlArrowRight","MonthStatisticlist","props","_templateObject2","selectedMonth","_Fragment","style","display","flexWrap","listStyle","statistic","daysArr","monthData","_loop","i","find","statisticOneDay","date","push","percentage","currentMonth","map","_ref2","title","concat","setSelectedMonth","MonthSwitcher","MonthStatistic","Container","DailyNorm","MonthStatsTable"],"sourceRoot":""}