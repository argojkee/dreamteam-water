{"version":3,"file":"static/js/637.c7092c8f.chunk.js","mappings":"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","sources":["components/AuthForm/Styles.js","components/AuthForm/AuthForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled\n// { keyframes, css }\n  from \"styled-components\";\n\n// const errorAnimation = keyframes`\n//  0% { padding-left: 5px; }\n//  20% { padding-left: 0; }\n\n//  40% { padding-left: 5px; }\n//  60% { padding-left: 0; }\n \n//  80% { padding-left: 5px; }\n//  100% { padding-left: 0; }\n// `;\n\n// 'FormContainer' get props  automatic from 'ContainerFormStyle' if you send them.\nconst Div = styled.div`\n\n  display: flex;\n  flex-direction: ${props => props.$divDiraction || 'row'};\n  justify-content: ${props => props.$justify || 'center'};\n  align-items: ${props => props.$align || 'center'}; \n\n  width: ${props => props.width || 'none'};\n  height: ${props => props.height || 'none'};\n\n  margin-bottom: ${props => props.$marginBott || '0'};\n\n  gap: ${props => props.$gap || 'none'};\n\n  color: ${props => props.color || '2F2F2F'};\n\n  background-color: ${props => props.Backcolor || 'white'};\n\n`;\n\nconst Form = styled.form`\n\n  display: flex;\n  flex-direction: ${props => props.$formDiraction || 'row'};\n  align-items: ${props => props.$align || 'center'}; \n\n  font-family: roboto;\n\n  width: ${props => props.width || '100%'};\n  \n\n  background-color: ${props => props.color || 'transparent'};\n\n`;\n\nconst Input = styled.input`\n\n  width: ${props => props.width || '384px'};\n  height: ${props => props.height || '44px'};\n\n  font-family: roboto;\n  font-size: ${props => props.$fontSize || '16px'};\n  color: ${props => props.$inputColor || 'none'};\n\n  padding: 12px 10px;\n\n  margin-bottom: ${props => props.$marginBott || '8px'};\n\n  border-radius: ${props => props.$borderRadius || 'none'};\n  background-color: ${props => props.color || 'transparent'};\n  border: 1px solid ${props => props.$borderColor || '#D7E3FF'};\n  outline: 'none';\n\n  &:focus {\n    border: 1px solid ${props => props.$borderColor || '#D7E3FF'};\n    outline: none;\n  }\n\n`;\n\nconst Text = styled.p`\n\n  font-family: roboto;\n  font-weight: ${props => props.$fontWeight || '500'};\n  font-size: ${props => props.$fontSize || '18px'};\n\n  width: ${props => props.$width || '100%'};\n\n  text-align: ${props => props.$textAlign || 'start'};\n\n  margin-bottom: ${props => props.$marginBott || '0'};\n\n`;\n\nconst Label = styled.label`\n  \n  width: ${props => props.$width || '100%'};\n\n  font-weight: ${props => props.$fontWeight || '500'};\n\n  margin-bottom: ${props => props.$marginBott || '8px'};\n  \n`;\n\nconst Button = styled.button`\n  \n  width: ${props => props.$width || '100%'};\n  height: ${props => props.height || '44px'};\n\n  font-family: roboto;\n  font-weight: ${props => props.$fontWeight || '600'};\n  font-size: ${props => props.$fontSize || '18px'};\n\n  color: white;\n\n  margin-bottom: ${props => props.$marginBott || '8px'};\n\n  border: none;\n  border-radius: ${props => props.$borderRadius || 'none'};\n\n  background-color: ${props => props.color || '#407BFF'};\n\n  box-shadow: 0px 5px 8px rgba(64, 123, 255, 0.34);\n\n  &:hover {\n    box-shadow: 0px 5px 14px rgba(64, 123, 255, 0.54);\n  }\n\n  &:active {\n    box-shadow: none;\n  }\n`;\n\nconst Link = styled.p`\n  \n  width: ${props => props.$width || 'fit-content'};\n\n  font-weight: ${props => props.$fontWeight || '500'};\n\n  margin-bottom: ${props => props.$marginBott || '0'};\n\n  cursor: pointer;\n\n  &:hover {\n    color: #FF9D43;\n  }\n  \n`;\n\nconst Styles = (props) => {\n\n  return( \n    <>\n      {props.$div ? <Div {...props}/> : ''}\n      {props.$form ? <Form {...props}/> : ''}\n      {props.$input ? <Input {...props}/> : ''}\n      {props.$p ? <Text {...props}/> : ''}\n      {props.$label ? <Label {...props}/> : ''}\n      {props.$button ? <Button {...props}/> : ''}\n      {props.$link ? <Link {...props}/> : ''}\n    </>\n  )\n};\n\nexport default Styles;","// import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useSpring, animated } from '@react-spring/web';\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport signInAPI from '../../API/Auth/signInAPI';\nimport signUpAPI from '../../API/Auth/signUpAPI';\n\n/* styles import */\nimport Styles from './Styles';\n/* end */\n\nconst AuthForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // get current location\n  const location = useLocation();\n\n  const isRegistrationPage = location.pathname === '/registration';\n\n  const animaDinamic = [\n    { paddingLeft: '20px' },\n    { paddingLeft: '0' },\n    { paddingLeft: '15px' },\n    { paddingLeft: '0' },\n    { paddingLeft: '10px' },\n    { paddingLeft: '0' },\n    { paddingLeft: '5px' },\n    { paddingLeft: '0' },\n  ];\n\n  // The 'formik' check all validation expression.\n  // But we have two variants form (logIn and register).\n  // We must create own validate rules function, because\n  // validation expression must be different for each situation.\n\n  const validationLoginForm = {\n    email: Yup.string()\n      .matches(\n        /\\w{0}[0-9a-zA-Zа-яА-Я]+@\\w{0}[a-zA-Zа-яА-Я]+\\.\\w{0}[a-zA-Zа-яА-Я]/,\n        { message: 'Invalid email' }\n      )\n      .required('Email field is required'),\n    password: Yup.string()\n      .min(8, 'Must be 8 characters or more')\n      .required('Password field is required'),\n  };\n\n  const validationRegisterForm = {\n    ...validationLoginForm,\n    repeatPassword: Yup.string()\n      .min(8, 'Must be 8 characters or more')\n      .required('RepeatPassword field is required')\n      .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n  };\n\n  // create 'formik' hook and configurate him\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      repeatPassword: '',\n    },\n\n    //yup stored own validate functions (for email, password...etc)\n    validationSchema: Yup.object(\n      isRegistrationPage ? validationRegisterForm : validationLoginForm\n    ),\n\n    //! 'values' contains ended values all Form inputs.\n    //! They will can get: 'values.<field name>' or change values on {email, password}\n    onSubmit: ({ email, password }) => {\n      isRegistrationPage\n        ? dispatch(signUpAPI({ email, password }))\n        : dispatch(signInAPI({ email, password }));\n    },\n  });\n\n  const springs = useSpring({\n    from: { paddingLeft: '0' },\n    to: [...animaDinamic],\n\n    config: { duration: 100 },\n  });\n\n  const navTo = () => {\n    isRegistrationPage ? navigate('/login') : navigate('/registration');\n  };\n\n  return (\n    <Styles $div $justify={'flex-end'} $align={'center'}>\n      <Styles $div $divDiraction={'column'} width={'384px'}>\n        <Styles $p $fontSize={'26px'} $marginBott={'16px'}>\n          {isRegistrationPage ? 'Sign up' : 'Sign in'}\n        </Styles>\n\n        <Styles onSubmit={formik.handleSubmit} $form $formDiraction={'column'}>\n          <Styles $label htmlFor=\"email\">\n            <Styles $p $fontWeight={'400'}>\n              Enter your email\n            </Styles>\n          </Styles>\n          <Styles\n            $input\n            $inputColor={\n              formik.touched.email && formik.errors.email\n                ? '#EF5050'\n                : '#407BFF'\n            }\n            $borderColor={\n              formik.touched.email && formik.errors.email\n                ? '#EF5050'\n                : '#D7E3FF'\n            }\n            $borderRadius={'6px'}\n            $marginBott={'16px'}\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n\n          <Styles $label htmlFor=\"password\">\n            <Styles $p $fontWeight={'400'}>\n              Enter your password\n            </Styles>\n          </Styles>\n          <Styles\n            $input\n            $inputColor={\n              formik.touched.password &&\n              formik.errors.password &&\n              !formik.errors.email\n                ? '#EF5050'\n                : '#407BFF'\n            }\n            $borderColor={\n              formik.touched.password &&\n              formik.errors.password &&\n              !formik.errors.email\n                ? '#EF5050'\n                : '#D7E3FF'\n            }\n            $borderRadius={'6px'}\n            $marginBott={isRegistrationPage ? '16px' : '8px'}\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n          />\n\n          {isRegistrationPage && (\n            <>\n              <Styles $label htmlFor=\"repeatPassword\">\n                <Styles $p $fontWeight={'400'}>\n                  Repeat password\n                </Styles>\n              </Styles>\n              <Styles\n                $input\n                $inputColor={\n                  formik.touched.repeatPassword &&\n                  formik.errors.repeatPassword &&\n                  !formik.errors.password\n                    ? '#EF5050'\n                    : '#407BFF'\n                }\n                $borderColor={\n                  formik.touched.repeatPassword &&\n                  formik.errors.repeatPassword &&\n                  !formik.errors.password\n                    ? '#EF5050'\n                    : '#D7E3FF'\n                }\n                $borderRadius={'6px'}\n                $marginBott={'8px'}\n                id=\"repeatPassword\"\n                name=\"repeatPassword\"\n                type=\"password\"\n                onChange={formik.handleChange}\n                placeholder=\"Repeat password\"\n                onBlur={formik.handleBlur}\n                value={formik.values.repeatPassword}\n              />\n            </>\n          )}\n\n          <Styles\n            $div\n            $animaOn\n            color={'#EF5050'}\n            height={'8px'}\n            width={'100%'}\n            $justify={'flex-start'}\n            $marginBott={'8px'}\n          >\n            <animated.div style={{ ...springs }}>\n              {formik.touched.email && formik.errors.email\n                ? formik.errors.email\n                : formik.touched.password && formik.errors.password\n                ? formik.errors.password\n                : formik.touched.repeatPassword && formik.errors.repeatPassword\n                ? formik.errors.repeatPassword\n                : ''}\n            </animated.div>\n          </Styles>\n\n          <Styles\n            $button\n            type=\"submit\"\n            $borderRadius={'10px'}\n            $marginBott={'16px'}\n          >\n            Submit\n          </Styles>\n        </Styles>\n\n        <Styles $div $justify={'flex-start'} width={'100%'}>\n          <Styles $link onClick={navTo}>\n            To {isRegistrationPage ? 'Sign in' : 'Sign up'}\n          </Styles>\n        </Styles>\n      </Styles>\n    </Styles>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/AuthForm/AuthForm';\nimport Container from 'components/Container/Container';\n\nconst LoginPage = () => {\n  return (\n    <section>\n      <Container>\n        <AuthForm />\n      </Container>\n    </section>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Div","styled","_templateObject","_taggedTemplateLiteral","props","$divDiraction","$justify","$align","width","height","$marginBott","$gap","color","Backcolor","Form","_templateObject2","$formDiraction","Input","_templateObject3","$fontSize","$inputColor","$borderRadius","$borderColor","Text","_templateObject4","$fontWeight","$width","$textAlign","Label","_templateObject5","Button","_templateObject6","Link","_templateObject7","_jsxs","_Fragment","children","$div","_jsx","_objectSpread","$form","$input","$p","$label","$button","$link","dispatch","useDispatch","navigate","useNavigate","isRegistrationPage","useLocation","pathname","validationLoginForm","email","Yup","matches","message","required","password","min","validationRegisterForm","repeatPassword","oneOf","formik","useFormik","initialValues","validationSchema","onSubmit","_ref","signUpAPI","signInAPI","springs","useSpring","from","paddingLeft","to","concat","config","duration","Styles","handleSubmit","htmlFor","touched","errors","id","name","type","placeholder","onChange","handleChange","onBlur","handleBlur","value","values","$animaOn","animated","style","onClick","Container","AuthForm"],"sourceRoot":""}