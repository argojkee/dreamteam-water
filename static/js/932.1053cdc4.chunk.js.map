{"version":3,"file":"static/js/932.1053cdc4.chunk.js","mappings":"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","sources":["components/AuthForm/Styles.js","components/AuthForm/AuthForm.jsx","pages/RegistrationPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\n// 'FormContainer' get props  automatic from 'ContainerFormStyle' if you send them.\nconst Div = styled.div`\n\n  display: flex;\n  flex-direction: ${props => props.$divDiraction || 'row'};\n  justify-content: ${props => props.$justify || 'none'};\n  align-items: ${props => props.align || 'center'}; \n\n  width: ${props => props.width || 'none'};\n  height: ${props => props.height || '100vh'};\n\n  margin-bottom: ${props => props.$marginBott || '8px'};\n\n  gap: ${props => props.$gap || 'none'};\n\n  color: ${props => props.color || 'none'};\n\n  background-color: ${props => props.Backcolor || 'none'};\n\n`;\n\nconst Form = styled.form`\n\n  display: flex;\n  flex-direction: ${props => props.$formDiraction || 'row'};\n  align-items: ${props => props.$align || 'center'}; \n\n  font-family: roboto;\n\n  width: ${props => props.width || '100%'};\n  height: ${props => props.height || '100vh'};\n\n  gap: ${props => props.$gap || 'none'};\n\n  background-color: ${props => props.color || 'transparent'};\n\n`;\n\nconst Input = styled.input`\n\n  width: ${props => props.width || '364px'};\n  height: ${props => props.height || '20px'};\n\n  font-family: roboto;\n  font-size: ${props => props.$fontSize || '16px'};\n  color: #407BFF;\n\n  padding: 12px 10px;\n\n  margin-bottom: ${props => props.$marginBott || '8px'};\n\n  border-radius: ${props => props.$borderRadius || 'none'};\n  background-color: ${props => props.color || 'transparent'};\n  border: 1px solid ${props => props.$borderColor || '#D7E3FF'};\n  outline: 'none';\n\n`;\n\nconst Text = styled.p`\n\n  font-family: roboto;\n  font-weight: ${props => props.$fontWeight || '500'};\n  font-size: ${props => props.$fontSize || '18px'};\n\n  width: ${props => props.$width || '100%'};\n\n  text-align: ${props => props.$textAlign || 'start'};\n\n  margin-bottom: ${props => props.$fontSize || 'none'};\n\n`;\n\nconst Label = styled.label`\n  \n  width: ${props => props.$width || '100%'};\n\n  font-weight: ${props => props.$fontWeight || '500'};\n\n  margin-bottom: ${props => props.$marginBott || '8px'};\n  \n`;\n\nconst Button = styled.button`\n  \n  width: ${props => props.$width || '100%'};\n  height: ${props => props.height || '44px'};\n\n  font-family: roboto;\n  font-weight: ${props => props.$fontWeight || '600'};\n  font-size: ${props => props.$fontSize || '18px'};\n\n  color: white;\n\n  margin-bottom: ${props => props.$marginBott || '8px'};\n\n  border: none;\n  border-radius: ${props => props.$borderRadius || 'none'};\n\n  background-color: ${props => props.color || '#407BFF'};\n`;\n\nconst Link = styled.p`\n  \n  width: ${props => props.$width || '100%'};\n\n  font-weight: ${props => props.$fontWeight || '500'};\n\n  margin-bottom: ${props => props.$marginBott || '8px'};\n\n  cursor: pointer;\n\n  &:hover {\n    color: #407BFF;\n  }\n  \n`;\n\nconst Styles = (props) => {\n\n  return( \n    <>\n      {props.$div ? <Div {...props}/> : ''}\n      {props.$form ? <Form {...props}/> : ''}\n      {props.$input ? <Input {...props}/> : ''}\n      {props.$p ? <Text {...props}/> : ''}\n      {props.$label ? <Label {...props}/> : ''}\n      {props.$button ? <Button {...props}/> : ''}\n      {props.$link ? <Link {...props}/> : ''}\n    </>\n  )\n};\n\nexport default Styles;","import { useDispatch } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport signInAPI from '../../API/Auth/signInAPI';\nimport signUpAPI from '../../API/Auth/signUpAPI';\n\n/* styles import */\nimport Styles from './Styles';\n/* end */\n\nconst AuthForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // get current location\n  const location = useLocation();\n\n  const isRegistrationPage = location.pathname === '/registration';\n\n  // The 'formik' check all validation expression.\n  // But we have two variants form (logIn and register).\n  // We must create own validate rules function, because\n  // validation expression must be different for each situation.\n\n  const validationLoginForm = {\n    email: Yup.string()\n      .matches(\n        /\\w{0}[a-zA-Zа-яА-Я]+@\\w{0}[a-zA-Zа-яА-Я]+\\.\\w{0}[a-zA-Zа-яА-Я]/,\n        { message: 'Invalid email' }\n      )\n      .required(\"'Email' field is required\"),\n    password: Yup.string()\n      .min(8, 'Must be 8 characters or more')\n      .required(\"'Password' field is required\"),\n  };\n\n  const validationRegisterForm = {\n    ...validationLoginForm,\n    repeatPassword: Yup.string()\n      .min(8, 'Must be 8 characters or more')\n      .required(\"'RepeatPassword' field is required\")\n      .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n  };\n\n  // create 'formik' hook and configurate him\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      repeatPassword: '',\n    },\n\n    //yup stored own validate functions (for email, password...etc)\n    validationSchema: Yup.object(\n      isRegistrationPage ? validationRegisterForm : validationLoginForm\n    ),\n\n    //!'values' contains ended values all Form inputs. They will can get: 'values.<field name>'\n    onSubmit: values => {\n      isRegistrationPage\n        ? dispatch(\n            signUpAPI({\n              email: values.email,\n              password: values.password,\n            })\n          )\n        : dispatch(\n            signInAPI({ email: values.email, password: values.password })\n          );\n    },\n    //* onSubmit: {email, password} => {\n    //*   isRegistrationPage\n    //*     ? dispatch(\n    //*         signUpAPI({ email, password })\n    //*       )\n    //*     : dispatch(\n    //*         signInAPI({ email, password })\n    //*       );\n    //* },\n  });\n\n  const navTo = () => {\n    isRegistrationPage ? navigate('/login') : navigate('/registration');\n  };\n\n  return (\n    <Styles $div $justify={'center'}>\n      <Styles $div $divDiraction={'column'} height={'312px'} width={'384px'}>\n        <Styles $p $fontSize={'26px'} $marginBott={'16px'}>\n          {isRegistrationPage ? 'Sign up' : 'Sign in'}\n        </Styles>\n\n        <Styles onSubmit={formik.handleSubmit} $form $formDiraction={'column'}>\n          <Styles $label htmlFor=\"email\">\n            <Styles $p $fontWeight={'400'}>\n              Enter your email\n            </Styles>\n          </Styles>\n          <Styles\n            $input\n            $borderRadius={'6px'}\n            $marginBott={'16px'}\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n\n          <Styles $label htmlFor=\"password\">\n            <Styles $p $fontWeight={'400'}>\n              Enter your password\n            </Styles>\n          </Styles>\n          <Styles\n            $input\n            $borderRadius={'6px'}\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n          />\n\n          {isRegistrationPage && (\n            <>\n              <Styles $label htmlFor=\"repeatPassword\">\n                <Styles $p $fontWeight={'400'}>\n                  Repeat password\n                </Styles>\n              </Styles>\n              <Styles\n                $input\n                $borderRadius={'6px'}\n                id=\"repeatPassword\"\n                name=\"repeatPassword\"\n                type=\"password\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.repeatPassword}\n              />\n            </>\n          )}\n\n          <Styles $div color={'#EF5050'} height={'8px'}>\n            {formik.touched.email && formik.errors.email\n              ? formik.errors.email\n              : formik.touched.password && formik.errors.password\n              ? formik.errors.password\n              : formik.touched.repeatPassword && formik.errors.repeatPassword\n              ? formik.errors.repeatPassword\n              : ''}\n          </Styles>\n\n          <Styles $button type=\"submit\" $borderRadius={'10px'}>\n            Submit\n          </Styles>\n        </Styles>\n\n        <Styles $link onClick={navTo}>\n          {' '}\n          To {isRegistrationPage ? 'login' : 'registration'} page{' '}\n        </Styles>\n      </Styles>\n    </Styles>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/AuthForm/AuthForm'\nimport Container from 'components/Container/Container';\n\nconst RegistrationPage = () => {\n\n  return (\n    \n    <section>\n      <Container>\n        <AuthForm/>\n      </Container>\n    </section>\n\n  );\n};\n\nexport default RegistrationPage;"],"names":["Div","styled","_templateObject","_taggedTemplateLiteral","props","$divDiraction","$justify","align","width","height","$marginBott","$gap","color","Backcolor","Form","_templateObject2","$formDiraction","$align","Input","_templateObject3","$fontSize","$borderRadius","$borderColor","Text","_templateObject4","$fontWeight","$width","$textAlign","Label","_templateObject5","Button","_templateObject6","Link","_templateObject7","_jsxs","_Fragment","children","$div","_jsx","_objectSpread","$form","$input","$p","$label","$button","$link","dispatch","useDispatch","navigate","useNavigate","isRegistrationPage","useLocation","pathname","validationLoginForm","email","Yup","matches","message","required","password","min","validationRegisterForm","repeatPassword","oneOf","formik","useFormik","initialValues","validationSchema","onSubmit","values","signUpAPI","signInAPI","Styles","handleSubmit","htmlFor","id","name","type","onChange","handleChange","onBlur","handleBlur","value","touched","errors","onClick","Container","AuthForm"],"sourceRoot":""}