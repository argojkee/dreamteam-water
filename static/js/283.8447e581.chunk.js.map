{"version":3,"file":"static/js/283.8447e581.chunk.js","mappings":"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","sources":["components/DailyNorm/DailyNormStyles.styled.js","components/EditNormaModal/EditNormaModal.jsx","components/DailyNorm/DailyNorm.jsx","pages/pageStyles/MainPageStyles.styled.js","components/Calendar/monthsArr.js","components/Calendar/MonthSwitcher/MonthSwitcher.styled.js","components/Calendar/MonthSwitcher/MonthSwitcher.jsx","components/Calendar/MonthSwitcher/useInitialDate.js","components/Calendar/MonthStatistic/MonthStatistic.styled.js","components/Calendar/MonthStatistic/MonthStatistic.jsx","components/Calendar/MonthStatsTable.jsx","pages/MainPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport background from '../../images/main-bg/Bottle-Main-lg.png';\n\nexport const DailyNormStyles = styled.div`\n  background-image: url(${background});\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  .dailyNormaSection {\n    padding: 8px 20px 8px 20px;\n\n    box-shadow: rgba(158, 187, 255, 0.12);\n    border: 1px solid rgba(236, 242, 255, 1);\n    border-radius: 10px;\n  }\n\n  h2 {\n    font-family: Roboto;\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 1.33;\n\n    text-align: left;\n  }\n\n  .button-info-container {\n    display: flex;\n    flex-direction: row;\n  }\n\n  span {\n    font-family: Roboto;\n    font-size: 22px;\n    font-weight: 700;\n    line-height: 1;\n\n    text-align: left;\n\n    color: rgba(64, 123, 255, 1);\n  }\n\n  button {\n    font-family: Roboto;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1.25;\n\n    border: none;\n    background-color: inherit;\n\n    margin-left: 12px;\n    text-align: left;\n\n    color: rgba(139, 174, 255, 1);\n  }\n\n  /* background-image: url('../../images/main-bg/Bottle-Main-sm.png'); */\n\n  @media screen and (max-width: 767px) {\n    height: 290px;\n    background-image: url(${background});\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    height: 418px;\n    background-image: url(${background});\n  }\n\n  @media screen and (min-width: 1280px) {\n    height: 548px;\n    background-image: url(${background});\n  }\n`;\n","const EditNormaModal = () => {\n  return (\n    <div>\n      <h1>My daily norma</h1>\n      <form action=\"#\">\n        <p>For girl: V=(M*0.03) + (T*0.4)</p>\n        <p>For man: V=(M*0,04) + (T*0,6)</p>\n        <span>\n          * V is the volume of the water norm in liters per day, M is your body\n          weight, T is the time of active sports, or another type of activity\n          commensurate in terms of loads (in the absence of these, you must set\n          0)\n        </span>\n        <h2>Calculate your rate:</h2>\n        <label htmlFor=\"#\">\n          <input type=\"radio\" name=\"gender\" value=\"woman\" />\n          For woman\n        </label>\n        <label htmlFor=\"#\">\n          <input type=\"radio\" name=\"gender\" value=\"man\" />\n          For man\n        </label>\n        <br />\n        <label htmlFor=\"#\">\n          Your weight in kilograms:\n          <br />\n          {/* <input type=\"number\" name=\"number\" value={0} /> */}\n        </label>\n        <p>The required amount of water in liters per day: 1.8 L</p>\n\n        <h2>Write down how much water you will drink:</h2>\n        {/* <input type=\"number\" name=\"number\" value={0} /> */}\n        <br />\n        <button type=\"submit\">Save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditNormaModal;\n","import { DailyNormStyles } from './DailyNormStyles.styled';\nimport { Modal } from '../Modal/Modal';\nimport { useState } from 'react';\nimport EditNormaModal from 'components/EditNormaModal/EditNormaModal';\n\nconst DailyNorm = () => {\n  const [isShowEditModal, setIsShowEditModal] = useState(false);\n\n  return (\n    <DailyNormStyles>\n      <div className=\"dailyNormaSection\">\n        <h2>My daily norma</h2>\n        <div className=\"button-info-container\">\n          <span>1.5 L</span>\n          <button type=\"button\" onClick={() => setIsShowEditModal(true)}>\n            Edit\n          </button>\n        </div>\n      </div>\n\n      {isShowEditModal && (\n        <Modal\n          closeModal={() => setIsShowEditModal(false)}\n          children={<EditNormaModal />}\n        />\n      )}\n    </DailyNormStyles>\n  );\n};\n\nexport default DailyNorm;\n","import styled from 'styled-components';\n\nexport const MainPageStyles = styled.section`\n  .main-container {\n    width: 100%;\n    display: flex;\n  }\n\n  .left-side {\n    border: 1px solid green;\n  }\n\n  .right-side {\n    border-radius: 10px;\n    background: var(--Secondary-color-2, #ecf2ff);\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.3);\n  }\n\n  @media screen and (max-width: 767px) {\n    padding-top: 24px;\n    padding-bottom: 40px;\n    .left-side {\n      height: 504px;\n      width: 100%;\n      padding-bottom: 40px;\n    }\n\n    .right-side {\n      padding: 24px 8px;\n    }\n\n    .today {\n      width: 100%;\n      height: 258px;\n      background-color: gray;\n    }\n  }\n\n  @media screen and (max-width: 1279px) {\n    .main-container {\n      flex-direction: column;\n    }\n\n    .left-side {\n      width: 100%;\n    }\n\n    .right-side {\n      width: 100%;\n    }\n\n    .status-bar {\n      width: 100%;\n      height: 134px;\n      background-color: gray;\n      padding-top: 16px;\n    }\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    padding-top: 16px;\n    .left-side {\n      height: 548px;\n      width: 100%;\n    }\n\n    .today {\n      width: 100%;\n      height: 260px;\n      background-color: gray;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    .left-side {\n      padding-bottom: 40px;\n    }\n\n    .right-side {\n      padding: 32px 24px;\n    }\n    .status-bar {\n      width: 100%;\n      height: 90px;\n      background-color: gray;\n      padding-top: 24px;\n    }\n\n    .today {\n      width: 100%;\n      height: 260px;\n      background-color: gray;\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 22px;\n    .left-side {\n      height: 680px;\n      width: 624px;\n      padding-right: 32px;\n    }\n\n    .right-side {\n      width: 592px;\n    }\n\n    .today {\n      width: 544px;\n      height: 260px;\n      background-color: gray;\n    }\n  }\n`;\n","export const monthsArr = [\n  { name: 'January', numberOfDays: 31 },\n  { name: 'February', numberOfDays: 28 },\n  { name: 'March', numberOfDays: 31 },\n  { name: 'April', numberOfDays: 30 },\n  { name: 'May', numberOfDays: 31 },\n  { name: 'June', numberOfDays: 30 },\n  { name: 'July', numberOfDays: 31 },\n  { name: 'August', numberOfDays: 31 },\n  { name: 'September', numberOfDays: 30 },\n  { name: 'October', numberOfDays: 31 },\n  { name: 'November', numberOfDays: 30 },\n  { name: 'December', numberOfDays: 31 },\n];\n\n// function isLeapYear(year) {\n//   return (year % 4 === 0 && year % 100 !== 0) ||\n//     year % 400 === 0 ? true : false\n// }\n\n// const statistic = {\n//   2023: { 12: { 1: { '07:00': '10 ml', '08:00': '50ml' }, 5: { '07:00': '10ml', '08:00': '50ml' } } },\n//   2024: { 12: { 1: { '07:00': '10 ml', '08:00': '50ml' }, 5: { '07:00': '10ml', '08:00': '50ml' } } }\n// }\n\n// const monthStatistic = {\n//   2023: { 12: { 1: { '07:00': '10 ml', '08:00': '50ml' }, 5: { '07:00': '10ml', '08:00': '50ml' } } },\n//   2024: { 12: { 1: { '07:00': '10 ml', '08:00': '50ml' }, 5: { '07:00': '10ml', '08:00': '50ml' } } }\n// }\n","import styled from 'styled-components';\n\nexport const MonthSwitcherContainer = styled.div`\n\n  display: flex;\n  gap: 12px;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 24px;\n\n    h2{\n      color: #2F2F2F;\n      font-family: Roboto;\n      font-size: 26px;\n      font-weight: 500;\n      line-height: 1,23\n    }\n\n    div{\n      display: flex;\n      gap: 12px;\n      align-items: center;\n    }\n  \n    h3{\n      color:#407BFF;\n      text-align: center;\n      font-family: Roboto;\n      font-size: 16px;\n      line-height: 1.25;\n      min-width: 120px;\n      display: block;\n    }\n\n    button {\n      border: none;\n      background-color: transparent;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      color: #407BFF;\n      width: 14px;\n      height: 14px;\n      padding: 0;\n      cursor: pointer;\n\n      &:disabled {\n       opacity: 0;\n  }\n  }\n`;","import { useEffect, useState } from 'react';\nimport { useInitialDate } from './useInitialDate';\nimport { monthsArr } from '../monthsArr';\nimport { SlArrowLeft, SlArrowRight } from 'react-icons/sl';\nimport { MonthSwitcherContainer } from './MonthSwitcher.styled';\n\nconst MonthSwitcher = ({ changeSelectedMonth }) => {\n  const [today] = useInitialDate();\n  const [pickedDate, setPickedDate] = useState(today);\n  const [registrationDate] = useState({ day: 1, month: 9, year: 2023 });\n\n  useEffect(() => {\n    const newCurrentMonth = {\n      day: null,\n      month: pickedDate.month,\n      year: pickedDate.year,\n    };\n    changeSelectedMonth(newCurrentMonth);\n  }, [pickedDate, changeSelectedMonth]);\n\n  const handlePrevMonth = () => {\n    pickedDate.month === 0\n      ? setPickedDate(prev => ({ ...prev, month: 11, year: prev.year - 1 }))\n      : setPickedDate(prev => ({ ...prev, month: prev.month - 1 }));\n  };\n\n  const handleNextMonth = () => {\n    pickedDate.month === 11\n      ? setPickedDate(prev => ({ ...prev, month: 0, year: prev.year + 1 }))\n      : setPickedDate(prev => ({ ...prev, month: prev.month + 1 }));\n  };\n\n  const isButtonPrevDisabled = () => {\n    return (registrationDate.day <= 2 &&\n      registrationDate.month === 0 &&\n      pickedDate.month === 11 &&\n      registrationDate.year === pickedDate.year + 1) ||\n      (registrationDate.day <= 2 &&\n        registrationDate.month - 1 === pickedDate.month &&\n        registrationDate.year === pickedDate.year) ||\n      (registrationDate.day > 2 &&\n        registrationDate.month === pickedDate.month &&\n        registrationDate.year === pickedDate.year)\n      ? true\n      : false;\n  };\n\n  const isButtonNextDisabled = () => {\n    return (\n      pickedDate.year >= today.year + 5 && pickedDate.month === today.month\n    );\n  };\n\n\n  return (\n    <MonthSwitcherContainer>\n      <h2>Month</h2>\n      <div>\n        <button onClick={handlePrevMonth} disabled={isButtonPrevDisabled()}>\n        <SlArrowLeft />\n      </button>\n      <h3>\n        {monthsArr[pickedDate.month].name}, {pickedDate.year}\n      </h3>\n      <button onClick={handleNextMonth} disabled={isButtonNextDisabled()}>\n        <SlArrowRight />\n        </button>\n        </div>\n    </MonthSwitcherContainer>\n  );\n};\n\nexport default MonthSwitcher;\n","import { useState } from \"react\";\n\nexport const useInitialDate = () => {\n  const currentDate = new Date();\n\n  const [today, setToday] = useState({\n      day: currentDate.getDate(),\n      month: currentDate.getMonth(),\n      year: currentDate.getFullYear()\n  });\n\n  return [today, setToday];\n};","import styled from // , { css }\n'styled-components';\n\nexport const MonthStatisticlist = styled.div`\n  display: flex;\n  gap: 22px;\n  align-items: start;\n  padding-top: 16px;\n\n  li {\n    text-align: center;\n    height: 52px;\n    width: 34px;\n  }\n\n  button {\n    border: none;\n    background-color: #fff;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #2f2f2f;\n    width: 34px;\n    height: 34px;\n    padding: 7px;\n    cursor: pointer;\n    font-family: Roboto;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1, 25;\n    border-radius: 50%;\n\n    &[data-fulfilled='false'] {\n      border: 1px solid #ff9d43;\n    }\n\n    //   &:disabled {\n    //    opacity: 0;\n  }\n\n  p {\n    color: #9ebbff;\n    font-family: Roboto;\n    size: 12px;\n    font-weight: 400;\n    line-height: 1.5;\n  }\n`;\n\n// [{ date: { year, month, day }, percent }, { date: { year, month, day }, percent }]\n// [\n//     {\n//         \"date\": {\n//             \"year\": 2024,\n//             \"month\": \"01\",\n//             \"day\": 1\n//         },\n//         \"percent\": 157.7\n//     },\n//     {\n//         \"date\": {\n//             \"year\": 2024,\n//             \"month\": \"01\",\n//             \"day\": 3\n//         },\n//         \"percent\": 0\n//     }\n// ]\n\nexport const Li = styled.li.attrs(props => ({\n  // Every <PasswordInput /> should be type=\"password\"\n}))``;\n","// import { ClassNames } from \"@emotion/react\";\nimport { monthsArr } from '../monthsArr';\nimport { MonthStatisticlist } from './MonthStatistic.styled';\nconst MonthStatistic = ({ selectedMonth }) => {\n  const currentMonth = (month, statistic) => {\n    const daysArr = [];\n    const monthData = monthsArr[month];\n    if (!monthData) {\n      return daysArr;\n    }\n    for (let i = 1; i <= monthData.numberOfDays; i += 1) {\n      const day = statistic.find(statisticOneDay => statisticOneDay.date === i);\n      if (day) {\n        daysArr.push({ date: i, percentage: day.percentage });\n      } else {\n        daysArr.push({ date: i, percentage: '0' });\n      }\n    }\n    return daysArr;\n  };\n\n  const stat = [\n    { date: 1, percentage: 120 },\n    { date: 2, percentage: 20 },\n    { date: 6, percentage: 150 },\n    { date: 8, percentage: 80 },\n  ];\n\n  return (\n    <>\n      <MonthStatisticlist\n        style={{ display: 'flex', flexWrap: 'wrap', listStyle: 'none' }}\n      >\n        {currentMonth(selectedMonth.month, stat).map(({ date, percentage }) => (\n          <li key={date}>\n            <button\n              title=\"Click to view daily statistics\"\n              data-fulfilled={percentage > 100 ? 'true' : 'false'}\n            >\n              {date}\n            </button>\n            <p>{percentage !== '' && `${percentage}%`}</p>\n          </li>\n        ))}\n      </MonthStatisticlist>\n    </>\n  );\n};\n\nexport default MonthStatistic;\n\n// {percentage < 100 ? 'true' : 'false'}\n","import { useState } from 'react';\nimport MonthSwitcher from './MonthSwitcher/MonthSwitcher';\nimport MonthStatistic from './MonthStatistic/MonthStatistic';\n\n\n\nconst MonthStatsTable = () => {\n  const [selectedMonth, setSelectedMonth] = useState({\n    day: null,\n    month: null,\n    year: null,\n  });\n\n  return (\n    <>\n      <MonthSwitcher changeSelectedMonth={setSelectedMonth} />\n      <MonthStatistic  selectedMonth={selectedMonth } />\n    </>\n  );\n};\n\nexport default MonthStatsTable;\n","import Container from 'components/Container/Container';\nimport DailyNorm from 'components/DailyNorm/DailyNorm';\nimport { MainPageStyles } from './pageStyles/MainPageStyles.styled';\nimport MonthStatsTable from 'components/Calendar/MonthStatsTable';\n\nconst MainPage = () => {\n  return (\n    <main>\n      <MainPageStyles>\n        <Container>\n          <div className=\"main-container\">\n            <div className=\"left-side\">\n              <DailyNorm />\n              <div className=\"status-bar\"> Status bar</div>\n            </div>\n            <div className=\"right-side\">\n              <div className=\"today\">Today</div>\n              <MonthStatsTable/>\n            </div>\n          </div>\n        </Container>\n      </MainPageStyles>\n    </main>\n  );\n};\n\nexport default MainPage;\n"],"names":["DailyNormStyles","styled","_templateObject","_taggedTemplateLiteral","background","_jsxs","children","_jsx","action","htmlFor","type","name","value","_useState","useState","_useState2","_slicedToArray","isShowEditModal","setIsShowEditModal","className","onClick","Modal","closeModal","EditNormaModal","MainPageStyles","monthsArr","numberOfDays","MonthSwitcherContainer","_ref","changeSelectedMonth","_useInitialDate","currentDate","Date","day","getDate","month","getMonth","year","getFullYear","useInitialDate","today","pickedDate","setPickedDate","_useState3","registrationDate","useEffect","newCurrentMonth","prev","_objectSpread","disabled","SlArrowLeft","SlArrowRight","MonthStatisticlist","props","_templateObject2","selectedMonth","_Fragment","style","display","flexWrap","listStyle","statistic","daysArr","monthData","_loop","i","find","statisticOneDay","date","push","percentage","currentMonth","map","_ref2","title","concat","setSelectedMonth","MonthSwitcher","MonthStatistic","Container","DailyNorm","MonthStatsTable"],"sourceRoot":""}