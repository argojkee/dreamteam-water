{"version":3,"file":"static/js/364.086e8483.chunk.js","mappings":"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","sources":["components/Calendar/MonthSwitcher/monthsArr.js","components/Calendar/MonthSwitcher/MonthSwitcher.styled.js","components/Calendar/MonthSwitcher/MonthSwitcher.jsx","components/Calendar/MonthSwitcher/useInitialDate.js","components/Calendar/Calendar.jsx","components/DailyNorm/DailyNormStyles.styled.js","components/DailyNorm/DailyNorm.jsx","pages/pageStyles/MainPageStyles.styled.js","pages/MainPage.jsx"],"sourcesContent":[" export const monthsArr = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];","import styled from 'styled-components';\n\nexport const MonthSwitcherContainer = styled.div`\n\n  display: flex;\n  gap: 12px;\n  justify-content: end;\n       align-items: center;\n  \n    h2{\n      color:#407BFF;\n      text-align: center;\n      font-family: Roboto;\n      font-size: 16px;\n      line-height: 1.25;\n      min-width: 120px;\n      display: block;\n    }\n\n    button {\n      border: none;\n      background-color: transparent;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      color: #407BFF;\n      width: 14px;\n      height: 14px;\n      padding: 0;\n      cursor: pointer;\n\n      &:disabled {\n       opacity: 0;\n  }\n  }\n\n  div{\n    width: 14px;\n    height: 14px;\n  }\n`;","import { useEffect, useState } from 'react';\nimport { useInitialDate } from './useInitialDate';\nimport { monthsArr } from './monthsArr';\nimport { SlArrowLeft, SlArrowRight } from 'react-icons/sl';\nimport { MonthSwitcherContainer } from './MonthSwitcher.styled';\n\nconst MonthSwitcher = ({ changeSelectedMonth }) => {\n  const [today] = useInitialDate();\n  const [pickedDate, setPickedDate] = useState(today);\n  const [registrationDate] = useState({ day: 1, month: 9, year: 2023 });\n\n  useEffect(() => {\n    const newCurrentMonth = {\n      day: null,\n      month: pickedDate.month,\n      year: pickedDate.year,\n    };\n    changeSelectedMonth(newCurrentMonth);\n  }, [pickedDate, changeSelectedMonth]);\n\n  const handlePrevMonth = () => {\n    pickedDate.month === 0\n      ? setPickedDate(prev => ({ ...prev, month: 11, year: prev.year - 1 }))\n      : setPickedDate(prev => ({ ...prev, month: prev.month - 1 }));\n  };\n\n  const handleNextMonth = () => {\n    pickedDate.month === 11\n      ? setPickedDate(prev => ({ ...prev, month: 0, year: prev.year + 1 }))\n      : setPickedDate(prev => ({ ...prev, month: prev.month + 1 }));\n  };\n\n  const isButtonPrevDisabled = () => {\n    return (registrationDate.day <= 2 &&\n      registrationDate.month === 0 &&\n      pickedDate.month === 11 &&\n      registrationDate.year === pickedDate.year + 1) ||\n      (registrationDate.day <= 2 &&\n        registrationDate.month - 1 === pickedDate.month &&\n        registrationDate.year === pickedDate.year) ||\n      (registrationDate.day > 2 &&\n        registrationDate.month === pickedDate.month &&\n        registrationDate.year === pickedDate.year)\n      ? true\n      : false;\n  };\n\n  const isButtonNextDisabled = () => {\n    return (\n      pickedDate.year >= today.year + 5 && pickedDate.month === today.month\n    );\n  };\n\n  return (\n    <MonthSwitcherContainer>\n      <button onClick={handlePrevMonth} disabled={isButtonPrevDisabled()}>\n        <SlArrowLeft />\n      </button>\n      <h2>\n        {monthsArr[pickedDate.month]} {pickedDate.year}\n      </h2>\n      <button onClick={handleNextMonth} disabled={isButtonNextDisabled()}>\n        <SlArrowRight />\n      </button>\n    </MonthSwitcherContainer>\n  );\n};\n\nexport default MonthSwitcher;\n","import { useState } from \"react\";\n\nexport const useInitialDate = () => {\n  const currentDate = new Date();\n\n  const [today, setToday] = useState({\n      day: currentDate.getDate(),\n      month: currentDate.getMonth(),\n      year: currentDate.getFullYear()\n  });\n\n  return [today, setToday];\n};","import { useState } from 'react';\nimport MonthSwitcher from './MonthSwitcher/MonthSwitcher';\n\nconst Calendar = () => {\n  const [selectedMonth, setSelectedMonth] = useState({\n    day: null,\n    month: null,\n    year: null,\n  });\n\n  console.log(selectedMonth);\n\n  return (\n    <div style={{ marginTop: '50px', marginLeft: 'auto' }}>\n      <MonthSwitcher changeSelectedMonth={setSelectedMonth} />\n    </div>\n  );\n};\n\nexport default Calendar;\n","import styled from 'styled-components';\nimport background from '../../images/main-bg/Bottle-Main-sm.png';\n\nexport const DailyNormStyles = styled.div`\n  background-image: url(${background});\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  .dailyNormaSection {\n    width: 164px;\n    height: 76px;\n\n    padding: 8px 20px 8px 20px;\n\n    background-color: linear-gradient(0deg, #ffffff, #ffffff),\n      linear-gradient(0deg, #ecf2ff, #ecf2ff);\n    border: 1px solid rgba(236, 242, 255, 1);\n    border-radius: 10px;\n  }\n\n  h2 {\n    font-family: Roboto;\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 1.33;\n\n    text-align: left;\n  }\n\n  span {\n    font-family: Roboto;\n    font-size: 22px;\n    font-weight: 700;\n    line-height: 1;\n\n    text-align: left;\n\n    color: rgba(64, 123, 255, 1);\n  }\n\n  button {\n    font-family: Roboto;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1.25;\n\n    border: none;\n    background-color: inherit;\n\n    /* width: 28px;\n    height: 20px; */\n\n    text-align: left;\n\n    color: rgba(139, 174, 255, 1);\n  }\n\n  /* background-image: url('../../images/main-bg/Bottle-Main-sm.png'); */\n`;\n","import { DailyNormStyles } from './DailyNormStyles.styled';\n\nconst DailyNorm = () => {\n  return (\n    <DailyNormStyles>\n      <div className=\"dailyNormaSection\">\n        <h2>My Daily norma</h2>\n        <span>1.5 L</span>\n        <button type=\"button\">Edit</button>\n      </div>\n    </DailyNormStyles>\n  );\n};\n\nexport default DailyNorm;\n","import styled from 'styled-components';\n\nexport const MainPageStyles = styled.section`\n  .main-container {\n    width: 100%;\n    display: flex;\n  }\n\n  .left-side {\n    border: 1px solid green;\n  }\n\n  .right-side {\n    border-radius: 10px;\n    background: var(--Secondary-color-2, #ecf2ff);\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.3);\n  }\n\n  @media screen and (max-width: 767px) {\n    padding-top: 24px;\n    padding-bottom: 40px;\n    .left-side {\n      height: 504px;\n      width: 100%;\n    }\n\n    .right-side {\n      padding: 24px 8px;\n    }\n\n    .status-bar {\n      width: 100%;\n      height: 134px;\n      background-color: gray;\n    }\n\n    .today {\n      width: 100%;\n      height: 258px;\n      background-color: gray;\n    }\n  }\n\n  @media screen and (max-width: 1279px) {\n    .main-container {\n      flex-direction: column;\n    }\n\n    .left-side {\n      width: 100%;\n    }\n\n    .right-side {\n      width: 100%;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    .left-side {\n      padding-bottom: 40px;\n    }\n\n    .right-side {\n      padding: 32px 24px;\n    }\n    .status-bar {\n      width: 100%;\n      height: 90px;\n      background-color: gray;\n    }\n\n    .today {\n      width: 100%;\n      height: 260px;\n      background-color: gray;\n    }\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    padding: 44px 16px;\n    .left-side {\n      height: 548px;\n      width: 100%;\n    }\n\n    .today {\n      width: 100%;\n      height: 260px;\n      background-color: gray;\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 40px 20px;\n    .left-side {\n      height: 680px;\n      width: 624px;\n    }\n\n    .right-side {\n      width: 592px;\n    }\n\n    .today {\n      width: 544px;\n      height: 260px;\n      background-color: gray;\n    }\n  }\n`;\n","import Calendar from 'components/Calendar/Calendar';\nimport Container from 'components/Container/Container';\nimport DailyNorm from 'components/DailyNorm/DailyNorm';\nimport { MainPageStyles } from './pageStyles/MainPageStyles.styled';\n\nconst MainPage = () => {\n  return (\n    <main>\n      <MainPageStyles>\n        <Container>\n          <div className=\"main-container\">\n            <div className=\"left-side\">\n              <DailyNorm />\n              <div className=\"status-bar\"> Status bar</div>\n            </div>\n            <div className=\"right-side\">\n              <div className=\"today\">Today</div>\n              <Calendar />\n            </div>\n          </div>\n        </Container>\n      </MainPageStyles>\n    </main>\n  );\n};\n\nexport default MainPage;\n"],"names":["monthsArr","MonthSwitcherContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","changeSelectedMonth","_useInitialDate","currentDate","Date","_useState","useState","day","getDate","month","getMonth","year","getFullYear","_useState2","_slicedToArray","useInitialDate","today","pickedDate","setPickedDate","_useState3","registrationDate","useEffect","newCurrentMonth","_jsxs","children","_jsx","onClick","prev","_objectSpread","disabled","SlArrowLeft","SlArrowRight","selectedMonth","setSelectedMonth","console","log","style","marginTop","marginLeft","MonthSwitcher","DailyNormStyles","background","className","type","MainPageStyles","Container","DailyNorm","Calendar"],"sourceRoot":""}