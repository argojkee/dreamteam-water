{"version":3,"file":"static/js/306.9dd80137.chunk.js","mappings":"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","sources":["pages/HomePage.styled.jsx","pages/RestorePage.jsx","pages/pageStyles/VerificationStyle/Verification.styled.js"],"sourcesContent":["import styled from 'styled-components';\nimport desktop from '../homepageimages/Desktop.png';\nimport tablet from '../homepageimages/Tablet.png';\nimport mobile from '../homepageimages/Mobile.png';\nimport { Link } from 'react-router-dom';\n\nexport const BackgroundContainer = styled.section`\n  width: 100vw;\n  min-height: 100vh;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center bottom;\n\n  background-color: ${props => (props.$isDark ? 'black' : 'white')};\n\n  color: ${props => (props.$isDark ? 'white' : 'black')};\n\n  padding: 84px 0 50px 0;\n\n  margin: 0 auto;\n  padding: 88px 0 40px 0;\n\n  @media (max-width: 767px) {\n    background-image: url(${props => (props.$isDark ? 'black' : mobile)});\n  }\n\n  @media (min-width: 768px) {\n    background-image: url(${props => (props.$isDark ? 'black' : tablet)});\n  }\n\n  @media (min-width: 1440px) {\n    background-image: url(${props => (props.$isDark ? 'black' : desktop)});\n    padding: 144px 0 0 0;\n  }\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  @media (min-width: 768px) and (max-width: 1439px) {\n    align-items: flex-start;\n  }\n  @media (min-width: 1440px) {\n    flex-direction: row;\n    gap: 81px;\n    align-items: flex-end;\n  }\n`;\n\nexport const TrackerBlock = styled.div`\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    width: 100%;\n    margin-bottom: 60px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const TrackerTitle = styled.h1`\n  font-size: 28px;\n  font-weight: 700;\n  line-height: 1.14;\n  margin-bottom: 16px;\n\n  @media (min-width: 768px) {\n    font-size: 36px;\n    line-height: 1.16;\n  }\n`;\n\nexport const TrackerSubtitle = styled.p`\n  font-size: 24px;\n  font-weight: 400;\n  line-height: 1.25;\n  margin-bottom: 24px;\n\n  @media (min-width: 768px) {\n    font-size: 26px;\n    line-height: 1.23;\n  }\n`;\n\nexport const BenefitsListTitle = styled.ul`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.11;\n  margin-bottom: 12px;\n`;\n\nexport const BenefitsList = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 24px;\n\n  @media (min-width: 768px) and (max-width: 1439px) {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\n\nexport const BenefitItem = styled.li`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 100%;\n  @media (min-width: 768px) and (max-width: 1439px) {\n    width: calc((100% - 64px) / 3);\n  }\n`;\n\nexport const BenefitItemIcon = styled.img`\n  margin-right: 8px;\n`;\n\nexport const BenefitItemText = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  padding: 8px 30px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  background: var(--primary-color);\n  box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n  width: 100%;\n  margin: 0 auto;\n  height: 36px;\n  text-decoration: none;\n\n  &:hover {\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n    cursor: pointer;\n  }\n\n  &:active {\n    background: #407bff;\n  }\n\n  @media (min-width: 768px) {\n    width: 336px;\n    height: 44px;\n    margin: 0;\n  }\n\n  @media (min-width: 1440px) {\n    width: 384px;\n  }\n`;\n\nexport const LinkText = styled.span`\n  color: var(--primary-button-text-color);\n  text-align: center;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n  }\n`;\n\nexport const WhyDrinkWaterContainer = styled.div`\n  padding: 24px 16px;\n  border-radius: 10px;\n  background: #ecf2ff;\n  box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.3);\n  background-color: ${props => (props.$isDark ? 'gray' : 'white')};\n\n  color: ${props => (!props.$isDark ? 'black' : 'black')};\n\n  @media (min-width: 768px) {\n    padding: 32px 24px;\n  }\n`;\n\nexport const WhyDrinkWaterTitle = styled.h2`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.11;\n  margin-bottom: 12px;\n`;\n\nexport const WhyDrinkWaterList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 16px;\n  list-style-position: inside;\n`;\n\nexport const WhyDrinkWaterListItem = styled.li`\n  text-indent: -16px;\n  margin-left: 16px;\n`;\n\nexport const WhyDrinkWaterListItemIcon = styled.img`\n  margin-right: 8px;\n`;\n\nexport const ListText = styled.span`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n`;\n","import axios from 'axios';\nimport { useFormik } from 'formik';\n// import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport * as yup from 'yup';\n\nimport { BackgroundContainer, ContentContainer } from './HomePage.styled';\nimport { VerificationStyles } from './pageStyles/VerificationStyle/Verification.styled';\nimport Container from 'components/Container/Container';\nimport { useParams } from 'react-router-dom';\n\nconst schema = yup.object().shape({\n  email: yup.string().email('Enter valid email. For example user@gmail.com'),\n  newPassword: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters.')\n    .oneOf([yup.ref('repeatNewPassword')], 'Passwords do not match'),\n  repeatNewPassword: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters.')\n    .oneOf([yup.ref('newPassword')], 'Passwords do not match'),\n});\n\nconst RestorePage = () => {\n  const nav = useNavigate();\n  const { restoreToken } = useParams();\n  const handleSubmit = async (\n    { email, newPassword, repeatNewPassword },\n    { resetForm }\n  ) => {\n    if (!restoreToken) {\n      await axios.post(\n        `http://dreamteam-water-server.onrender.com/api/users/restore`,\n        { email }\n      );\n    } else {\n      await axios.patch(\n        `https://dreamteam-water-server.onrender.com/api/users/restore/${restoreToken}`,\n        { password: newPassword }\n      );\n    }\n\n    resetForm();\n    nav('/');\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      newPassword: '',\n      repeatNewPassword: '',\n    },\n    validationSchema: schema,\n    onSubmit: handleSubmit,\n  });\n  return (\n    <>\n      <BackgroundContainer>\n        <Container>\n          <ContentContainer>\n            <VerificationStyles>\n              <div className=\"box\">\n                <form onSubmit={formik.handleSubmit}>\n                  {!restoreToken && (\n                    <label className=\"setting-form-name-label\">\n                      <input\n                        className=\"setting-form-input\"\n                        type=\"email\"\n                        name=\"email\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        placeholder=\"Email\"\n                      />\n                    </label>\n                  )}\n                  {restoreToken && (\n                    <>\n                      <label className=\"setting-form-name-label\">\n                        <input\n                          style={\n                            formik.touched.newPassword &&\n                            formik.errors.newPassword && {\n                              borderColor: '#EF5050',\n                            }\n                          }\n                          className=\"setting-form-input\"\n                          type=\"text\"\n                          onChange={formik.handleChange}\n                          onBlur={formik.handleBlur}\n                          name=\"newPassword\"\n                          placeholder=\"Password\"\n                        />\n                      </label>\n                      <label className=\"setting-form-name-label\">\n                        <input\n                          style={\n                            formik.touched.repeatNewPassword &&\n                            formik.errors.repeatNewPassword && {\n                              borderColor: '#EF5050',\n                            }\n                          }\n                          className=\"setting-form-input\"\n                          type=\"text\"\n                          onChange={formik.handleChange}\n                          name=\"repeatNewPassword\"\n                          placeholder=\"Repeat password\"\n                        />\n                      </label>\n                    </>\n                  )}\n                  <button type=\"submit\" className=\"setting-form-submit\">\n                    {!restoreToken && 'Send email'}\n                    {restoreToken && 'Change password'}\n                  </button>\n                </form>\n              </div>\n            </VerificationStyles>\n          </ContentContainer>\n        </Container>\n      </BackgroundContainer>\n    </>\n  );\n};\n\nexport default RestorePage;\n","import styled from 'styled-components';\nimport background from '../../../images/verify/BackgroundMainPage.png';\n\nexport const VerificationStyles = styled.div`\n  background-color: ${props =>\n    props.$isDark ? 'var(--dark-bg-color)' : 'transparent'};\n  height: 100%;\n  height: 100%;\n\n  .btn_login {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 384px;\n    height: 44px;\n    padding: 10px 30px 10px 30px;\n    border-radius: 10px;\n    background-color: var(--primary-color);\n    color: white;\n\n    font-style: Roboto;\n    font-weight: 500;\n    font-size: 18px;\n    color: white;\n    line-height: 24px;\n    text-align: center;\n  }\n\n  .btn_login:hover,\n  .btn_login:focus {\n    background-color: var(--primary-color);\n\n    box-shadow: 0px 5px 8px rgba(64, 123, 255, 0.34);\n  }\n\n  .link {\n    text-decoration: none;\n  }\n  .text_message {\n    overflow: hidden;\n    font-style: Roboto;\n    font-weight: 400;\n    font-size: 20px;\n    color: white;\n    line-height: 1.23;\n    text-align: center;\n    color: ${props => (props.$isDark ? '#fff' : 'black')};\n  }\n\n  .box_textMessage {\n    display: block;\n    padding-bottom: 36px;\n  }\n\n  .box {\n    background-color: ${props => (props.$isDark ? 'black' : 'transparent')};\n  }\n`;\n\nexport const BackgroundStyles = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${background});\n  background-size: 100%;\n  background-position: bottom;\n  background-repeat: no-repeat;\n`;\n\nexport const ContentStyles = styled.div` //стили\n  width: 50%;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 15%;\n`;\n"],"names":["BackgroundContainer","styled","_templateObject","_taggedTemplateLiteral","props","$isDark","mobile","tablet","desktop","ContentContainer","_templateObject2","TrackerBlock","_templateObject3","TrackerTitle","_templateObject4","TrackerSubtitle","_templateObject5","BenefitsListTitle","_templateObject6","BenefitsList","_templateObject7","BenefitItem","_templateObject8","BenefitItemIcon","_templateObject9","BenefitItemText","_templateObject10","StyledLink","Link","_templateObject11","LinkText","_templateObject12","WhyDrinkWaterContainer","_templateObject13","WhyDrinkWaterTitle","_templateObject14","WhyDrinkWaterList","_templateObject15","WhyDrinkWaterListItem","_templateObject16","WhyDrinkWaterListItemIcon","_templateObject17","ListText","_templateObject18","schema","yup","shape","email","newPassword","min","oneOf","repeatNewPassword","nav","useNavigate","restoreToken","useParams","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee","_ref","_ref2","resetForm","_context","prev","next","axios","concat","password","stop","_x","_x2","apply","arguments","formik","useFormik","initialValues","validationSchema","onSubmit","_jsx","_Fragment","children","Container","VerificationStyles","className","_jsxs","type","name","onChange","handleChange","onBlur","handleBlur","placeholder","style","touched","errors","borderColor","BackgroundStyles","background","ContentStyles"],"sourceRoot":""}